{"version":3,"sources":["app/chaos/actions.js","app/chaos/agent.js","app/chaos/chaos.js","app/chaos/components/app.jsx","app/chaos/components/grid.jsx","app/chaos/components/grid_container.jsx","app/chaos/reducers.js","app/common/a_star.js","app/common/color.js","app/common/components/active_checkbox.jsx","app/common/components/collapsible_panel.jsx","app/common/components/input_spinner.jsx","app/common/util.js","app/common/voronoi_diagram.js","app/experimental/basic_drawer.js","app/experimental/components/app.jsx","app/experimental/components/debug_info.jsx","app/experimental/components/sample_preview.jsx","app/experimental/components/samples_collection.jsx","app/experimental/exp_rule.js","app/experimental/luna.js","app/experimental/moving_arrows.js","app/experimental/orbits.js","app/experimental/planet.js","app/experimental/planet_exp.js","app/experimental/planet_exp_2.js","app/experimental/planets_focus.js","app/experimental/rule_30.js","app/experimental/samples_collection_init.js","app/experimental/tableau.js","app/experimental/tableau_smooth.js","app/experimental/texture_generators/blur_generator.js","app/experimental/texture_generators/density_map.js","app/experimental/texture_generators/links.js","app/experimental/texture_generators/points_in_circle.js","app/experimental/vichniac_vote.js","app/geo/balls_generator.js","app/geo/components/app.jsx","app/geo/components/debug_info.jsx","app/geo/components/drawing_settings_form.jsx","app/geo/components/generate_world_form.jsx","app/geo/components/legend.jsx","app/geo/components/roads_form.jsx","app/geo/game.js","app/geo/geo.js","app/geo/interaction.js","app/geo/map_drawer.js","app/geo/regions_gatherer.js","app/geo/rivers_and_lakes_generator.js","app/geo/rrt_diagram.js","app/geo/texture_generator.js","app/planets/components/app.jsx","app/planets/components/debug_info.jsx","app/planets/components/generate_world_form.jsx","app/planets/game.js","app/planets/interaction.js","app/planets/map_drawer.js","app/planets/star_system.js","app/planets/stellar_body.js"],"names":["tick","advance_symbols_complete","TICK","ADVANCE_SYMBOLS_COMPLETE","type","Agent","x","y","stat","prop","symbols","init_advance","counters","valuables","exchange_flag","forEach","push_symbol","symbol","calc_valuables","advance_array","for_all_symbol_classes","is_valuable_symbol","get_current_symbol","indexOf","last","func","key","Array","symbol_class","first","shift","push","fun","msg","length_was","length","ret","diff","do_something_with_symbol","max_count","Object","keys","filter","Math","max","console","log","actions","Chaos","x_size","y_size","symbol_min_weight","symbol_max_weight","symbol_classes_min_length","symbol_classes_max_length","symbol_classes_count","init","symbols_arr","symbol_weight","rand","concat","fill","symbol_classes","from","rand_element","data","init_agent","store","tick_delay","count","advance_symbol_classes","exchange_symbols","dispatch","setTimeout","run","agent","i","add_symbol_class","line","for_all_agents","base","neighbors","get_neighbors","valuable_neighbors","a","ready_neighbors","are_you_gonna_exchange","chaos","document","addEventListener","render","querySelector","App","Component","Grid","size","props","map","element","j","borderCollapse","border","width","height","textAlign","fontSize","mapStateToProps","state","mapDispatchToProps","on_element_click","id","GridContainer","defaults","phase","action","root_reducer","AStar","getNeighboursFunc","euristicFunc","euristicWeight","pointIndexFunc","standardEuristic","startPoint","finishPoint","openList","closedList","addToOpenList","counter","step","openListIsEmpty","pointObj","popPointFromOpenList","neighbours","point","e","weight","path","iPointObj","parent","checkPointInClosedList","foundInOpenList","getFromOpenList","addToClosedList","location","pointWeight","parentPointObj","listKey","cur","index","undefined","pointFrom","pointTo","abs","Color","r","g","b","for_rgb","random_channel","random_by_floor","min","res","floor","ActiveCheckbox","checked","event","value","handler","setState","bind","text","CollapsiblePanel","args","header","name","content_func","InputSpinner","Infinity","update_value","preventDefault","target","new_value","click_down","manual_set","click_up","Util","limit","delay","final_func","exec_in_cycle_with_delay","random","arr","normal_max","normal_min","array","arr1","arr2","push_uniq","splice","next_index","next","value_func","min_element","max_element","isNaN","open_list","length_before","radius","sqrt","angle","atan2","cos","sin","degrees","PI","radians","to","points","p1","square_sum","xc","yc","p2","p3","square","pow","sigma","mu","E","d3","VoronoiDiagram","nodes","lloyd_relaxation_steps","voronoi","p","original_diagram","lloyd_relaxation","diagram","edges","node_from","node_to","seems_like_nodes_are_equal","node","edge","cells","links","left","right","cell","orig_cell","site","sort","n1","n2","angle1","to_polar_coords","angle2","halfedges","halfedge","halfedge_index","link_site","e1","e2","distance","find_min_and_max","to_move","new_points","polygons","poly","pf","convex_polygon_centroid","move_by_vector","old_node","very_close_is","PIXI","BasicDrawer","regime","real_size","ticks","tick_speed","react_app","createElement","additional","update_debug_info","pixi","Application","backgroundColor","to_pixi","antialias","view","getElementById","stage","interactive","renderer","base_container","Container","scale","position","addChild","appendChild","mouse_move_handler","tick_time","ticker","add","delta","select","html","FPS","innerHTML","tick_delta","redraw","init_graphics","removeChildren","mouse_coords","get_mouse_coords","offsetX","offsetY","window","href","go_back","DebugInfo","SamplePreview","valid_statuses","description","sample_url","img_path","status","status_text","replace","SamplesCollecton","ExpRule","color","get_element_color","out_of_border_func","e3","e4","e5","e6","e7","e8","e9","new_color","rule","pattern","Luna","count_craters","craters_data","precession","rand_float","nutation","crater_diameter","planet_radius","crossing","some","c","sphere_angles_distance","crater","angle_step","coords","calc_single_point","theta","z","phi","c1","c2","scalar","module","acos","MovingArrows","size_coef","matrix_size","arrows","change_angle_base_threshold","change_angle_tick","angle_inc","angle_inc_max","acceleration","max_speed","min_speed","speed","matrix_container","arrow","Text","fontFamily","rotation","rand_angle","linear_interpolation","new_speed","from_polar_coords","f","Orbits","figures","precession_coef","nutation_coef","count_figures","graphics","Graphics","draw_full_circle","figure","sp","cp","nx","ny","clear","count_dots","beginFill","drawCircle","endFill","Planet","round","planet","init_graphics_from_sphere_map","sphere_map","map_transparency_alpha","draw_contour","contour","lineStyle","change_angles","alpha","sin_r","cos_r","sin_p","cos_p","sin_n","cos_n","cos_n_sin_r","cos_n_cos_r","x2","y2","z2","drawRect","PlanetExp","parallel_num","count_parallels","count_points","phi_step","PlanetExp2","amplitude","count_waves","altitude","sin_ring","steps","t","PlanetsFocus","matrix","bodies","init_bodies","forced_focus","focused_body","focus_change_threshold","focus_change_tick","update_matrix_by_focus","body","orbital_angle","orbital_speed","rotation_speed","set_graphics_transform_by_stellar_coords","cur_index","calc_coords_recursively","acc","orbital_radius","star","init_body","planet1","moon1","planet2","moon21","moon22","StellarBody","init_body_graphics","parent_graphics","closePath","radius_factor","Rule30","l","s","element_state_rule","Tableau","color_change_per_tick","square_size","normalize_value","init_state","update_cells","mutate_state","for_all_elements","init_element_state","mutate_element_state","TableauSmooth","sign","BlurGenerator","game","map_drawer","exp_container","points_count_coef","points_count","radius_coef","count_near_threshold","steps_count","basic_color","brighter","exp_dots_step","exp_dots_draw_circle","nears_sum","count_near","exp_dots_count_near","filtered","DensityMap","reject_limit","average_distance_threshold","zero_distance_sum","initial","count_basic","reject_counter","total_rejects","random_point","check_in_circle","check_average_distance","reduce","draw_naive","grid_points","grid_point","density","max_density","channel","Links","angle_divider","border_points","on_border","calc_step","all_points","slice","process_links","count_border","links_to_process","link_to_delete","remove_element","moveTo","lineTo","link","PointsInCicrle","random_near","triangles","drawPolygon","triangle","Point","VichniacVote","BallsGenerator","color_map","drawer","num_balls","ball_radius_min","ball_radius_max","color_step","color_count","rx","ry","find","geo_type","texture","generateCanvasTexture","SCALE_MODES","LINEAR","sprite","Sprite","layers","margin","borderSpacing","verticalAlign","DrawingSettingsForm","checkbox_type","draw_voronoi_diagram","set_layers_visibility","prop_name","create_checkbox","GenerateWorldForm","rrt_epsilon","parseInt","children","layer","generate_map","submit","Legend","RoadsForm","Game","cells_count","rrt_reject_limit","interaction","rrt","generate","closest_backlinks","closest_link","geo","draw","highlight_bad_river_links","highlight_local_minimums","exports","Geo","sea_ratio","rock_height_ratio","rrt_regions","max_branch_order","branch_order","deleted_links","remove_some_links_and_recalc_all","centers","generation","init_height","generate_heights_by_rrt_generations","generate_heights_by_rrt_branches_length","height_smooth","set_nodes_height_by_cell_height","generate_sea","restore_removed_links","highlight_deleted_links","generate_rivers","generate_rocks_by_height","calc_fertility","geo_types_by_fertility","sea_cells_threshold","count_sea_cells","heights_stat","shore","max_height","rock_from_height","ceil","generate_by_edges","convex_polygon_square","fertility_multiplier","fertility","sum_rivers_strength","river","strength","stats","geo_type_fertility_thresholds","bog","grass","steppe","desert","floor_level","max_diff_coef","h","max_diff","changed","height_to_max_diff","peak_max_height","peak_min_height","peak_height","Interaction","cell_under_cursor","onclick","build_road_button_handler","map_mouse_move_handler","on","map_click_handler","call","zoom","scaleExtent","translateExtent","map_zoom","road_text_div","fps_div","update_map_scale","road_start_cell","change_state","clear_cell_under_cursor","get_cell_under_cursor","highlight_cell_under_cursor","world_pos","mouse_coords_to_world_coords","road_finish_cell","transform","k","world_coords","xn","yn","MapDrawer","require","draw_rrt_links","draw_arrows","draw_height","draw_rivers","draw_geo_types","dark_mode","water_color","init_heignts","init_geo_types","init_arrows","init_rrt","init_rivers","rg","draw_smoothed_polygon","init_dark_mode","visible","polygon","border_graphics","inner_graphics","graphics_arrows","dry_river_color","get_line_width_for_river","child","draw_arrow","every","draw_polygon","fn","min_height","geo_types_colors","sea","rock","lake","fill_color","bla","color_by_height","rrt_links","line_width","center","mid_radius","sum","next_i","next_node","fl_mid","for_all_consecutive_pairs","pc_mid","quadraticCurveTo","mid_point","two_cells_edge_midpoint","my_edge","RegionsGatherer","regions_mode","regions_min_cells","regions","starters","region","random_color","gather_all_parents_to_my_region","recursively_merge_small_regions","get_linked_cells_func","generations_per_regions","my_region_index","diagram_collect_regions","linked_cells","RRTDiagram","get_parent","small_regions","sort_regions_by_size","linked_regions","gather_all_linked_regions","target_region","rrt_leafs_move_all_cells_from_region_to_another_and_delete_it","RiversAndLakesGenerator","dry_factor","rrt_linked","check_linked","sea_side","river_roots","river_ends","river_links","parents","recursively_walk_from_ends","recursively_add_strength","all_but_from","RRTNode","epsilon","nearest","find_nearest_node","link_two_nodes","calc_branches_length_and_generations","nodes_to_process","delink_two_nodes","longest_branch","branch_length","recursively_set_branch_length","local_minimum","no_center_nearby","recursively_set_generation","leaf_nodes","recursively_calc_branch_order","lesser_branch_order","nearestDistance","d","n","dx","dy","TextureGenerator","tiles_count","tile_size","NEAREST","generate_world","star_system","handle_tick","bodies_graphics","init_stellar_body","planets","update_stellar_body","stellar_body","backlink","line_color","darker","small_circle","StarSystem","orbital_speed_coef","rotation_speed_coef","count_planets"],"mappings":"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","file":"public/app.js","sourcesContent":["/*\n * action types\n */\nexport const TICK = 'tick';\nexport const ADVANCE_SYMBOLS_COMPLETE = 'advance_symbols_complete';\n\n/*\n * other constants\n */\n\n/*\n * action creators\n */\nexport function tick() {\n  return {type: TICK};\n}\n\nexport function advance_symbols_complete() {\n  return {type: ADVANCE_SYMBOLS_COMPLETE};\n}\n","import Util from \"common/util\";\n\nexport default class Agent {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n    this.stat = {};\n  }\n\n  add_symbol_class(prop, symbols, init_advance = 0) {\n    this[prop] = [];\n    this.stat[prop] = {counters: {}, valuables: [], exchange_flag: false};\n    symbols.forEach(symbol => this.push_symbol(prop, symbol));\n    this.calc_valuables(prop);\n    while (init_advance-- > 0) this.advance_array(this[prop]);\n  }\n\n  advance_symbol_classes() {\n    this.for_all_symbol_classes((symbols, prop) => this.advance_array(symbols));\n  }\n\n  are_you_gonna_exchange(prop) {\n    return !this.is_valuable_symbol(this.get_current_symbol(prop), prop);\n  }\n\n  is_valuable_symbol(symbol, prop) {\n    return this.stat[prop].valuables.indexOf(symbol) !== -1;\n  }\n\n  get_current_symbol(prop) {\n    return Util.last(this[prop]);\n  }\n\n  //\n  // private\n  //\n  for_all_symbol_classes(func) {\n    // nasty hack\n    for (let key in this) {\n      if (this[key] instanceof Array) {\n        func(this[key], key);\n      }\n    }\n  }\n\n  advance_array(symbol_class) {\n    let first = symbol_class.shift();\n    symbol_class.push(first);\n  }\n\n  do_something_with_symbol(prop, symbol, fun) {\n    if (!this[prop] instanceof Array) {\n      throw({msg: \"bad symbol class\", prop});\n    }\n    // omg!\n    let length_was = this[prop].length;\n    let ret = this[prop][fun](symbol);\n    let diff = this[prop].length - length_was;\n    this.stat[prop].counters[symbol] = this.stat[prop].counters[symbol] + diff || 1;\n    if (this.stat[prop].counters[symbol] < 0) {\n      throw({msg: \"something wrong with stat\", prop, stat: this.stat[prop]});\n    }\n    return ret;\n  }\n\n  push_symbol(prop, symbol) {\n    this.do_something_with_symbol(prop, symbol, 'push');\n  }\n\n  pop_symbol(prop, symbol) {\n    this.do_something_with_symbol(prop, symbol, 'pop');\n  }\n\n  calc_valuables(prop) {\n    let stat = this.stat[prop].counters;\n    let max_count = 0;\n    // first try to value all symbols that has best stat and all that 1 point worse\n    let valuables = Object.keys(stat).filter(symbol => stat[symbol] > Math.max(max_count - 1, 1));\n    // then throw away all that 1 point worse\n    if (valuables.length == stat.length) {\n      console.log('valuables flush 1');\n      valuables = Object.keys(stat).filter(symbol => stat[symbol] > Math.max(max_count, 1));\n    }\n    // then throw away all\n    if (valuables.length == stat.length) {\n      console.log('valuables flush 2');\n      valuables = [];\n    }\n    this.stat[prop].valuables = valuables;\n  }\n}\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport Util from \"common/util\";\nimport Agent from 'chaos/agent';\n\nimport App from './components/app';\nimport root_reducer from './reducers';\nimport * as actions from './actions';\n\nclass Chaos {\n  constructor() {\n    // constants\n    this.x_size = 20;\n    this.y_size = 20;\n    this.symbols = ['✕', '✖', '✙', '✚', '✛', '✜', '✠', '✡', '✢', '✣', '✤', '✥', '✦', '✧', '✩', '✪', '✫', '✬', '✭', '✮', '✯', '✰', '✱', '✲', '✳', '✴', '✵', '✶', '✷', '✸', '✹', '✺', '✻', '✽', '✾', '✿', '❀', '❁', '❂', '❃', '❄', '❅', '❆', '❇', '❈', '❉', '❊', '❋', '❖'];\n    this.symbol_min_weight = 8;\n    this.symbol_max_weight = 16;\n    this.symbol_classes_min_length = 15;\n    this.symbol_classes_max_length = 20;\n    this.symbol_classes_count = 2;\n\n    this.init();\n  }\n\n  init() {\n    let symbols_arr = [];\n    this.symbols.forEach(symbol => {\n      let symbol_weight = Util.rand(this.symbol_min_weight, this.symbol_max_weight);\n      symbols_arr = symbols_arr.concat((new Array(symbol_weight)).fill(symbol));\n    });\n\n    this.symbol_classes = Array.from(Array(this.symbol_classes_count), e => {\n      let length = Util.rand(this.symbol_classes_min_length, this.symbol_classes_max_length);\n      // should symbol classes contain only uniq elements or not?\n      return Array.from(Array(length), ee => Util.rand_element(this.symbols));\n    });\n\n    this.data = Array.from(Array(this.y_size).keys(), y => {\n      return Array.from(Array(this.x_size).keys(), x => {\n        return this.init_agent(x, y);\n      });\n    });\n    this.store = createStore(root_reducer);\n    this.tick_delay = 2000;\n  }\n\n  run(count) {\n    if (count < 0) {\n      return;\n    }\n    this.advance_symbol_classes();\n    this.exchange_symbols();\n    this.store.dispatch(actions.tick());\n    setTimeout(() => this.run(--count), this.tick_delay);\n  }\n\n  //\n  // private\n  //\n\n  init_agent(x, y) {\n    let agent = new Agent(x, y);\n    this.symbol_classes.forEach((symbol_class, i) => {\n      agent.add_symbol_class('sc' + i, symbol_class, Util.rand(0, symbol_class.length));\n    });\n    return agent;\n  }\n\n\n  for_all_agents(func) {\n    this.data.forEach(line => {\n      line.forEach(agent => {\n        func(agent);\n      });\n    });\n  }\n\n  advance_symbol_classes() {\n    this.for_all_agents(agent => agent.advance_symbol_classes());\n    this.store.dispatch(actions.advance_symbols_complete());\n  }\n\n  get_neighbors(agent) {\n    // von neimann\n    let base = [[agent.x - 1, agent.y], [agent.x + 1, agent.y], [agent.x, agent.y - 1], [agent.x, agent.y + 1]];\n    let ret = [];\n    base.forEach(([x, y]) => {\n      if (this.data[y] && this.data[y][x]) {\n        ret.push(this.data[y][x]);\n      }\n    });\n    return ret;\n  }\n\n  //\n  // hellish omg part\n  //\n  exchange_symbols() {\n    this.for_all_agents(agent => {\n      agent.for_all_symbol_classes((symbols, prop) => {\n        let neighbors = this.get_neighbors(agent);\n        let valuable_neighbors = neighbors.filter(a => agent.is_valuable_symbol(a.get_current_symbol(prop), prop));\n        if (valuable_neighbors.length) {\n          console.log('valuable_neighbors OK', valuable_neighbors.length);\n        }\n        let ready_neighbors = valuable_neighbors.filter(a => a.are_you_gonna_exchange(prop));\n        if (ready_neighbors.length) {\n          console.log('ready_neighbors OK', prop, agent.x, agent.y);\n        } else {\n          console.log('ready_neighbors EMPTY', prop, agent.x, agent.y);\n        }\n      });\n    });\n  }\n}\n\n\nconst chaos = new Chaos();\nexport default chaos;\nchaos.run(5);\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  ReactDOM.render(\n    <Provider store={chaos.store}>\n      <App />\n    </Provider>,\n    document.querySelector('#app')\n  );\n});\n","\nimport React from 'react';\nimport GridContainer from './grid_container';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <div className=\"panel-group\">\n\n        <div className=\"panel panel-success\">\n          <div className=\"panel-body\">\n            <div className=\"\" id=\"view_container\">\n              <GridContainer />\n            </div>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n","\nimport React from 'react';\n\nexport default class Grid extends React.Component {\n  render() {\n    let size = '30px';\n\n    return (\n      <table>\n      <tbody>\n        {this.props.data.map((line, i) => {\n          return (<tr key={'y'+i}>{line.map((element, j) => {\n            return (\n              <td key={'x'+j} style={{borderCollapse: 'collapse', border: '1px solid black', width: size, height: size, textAlign: 'center'}}>\n                <span style={{fontSize: '20px'}}>\n                  {element.symbol}\n                </span>\n              </td>)\n          })}</tr>)\n        })}\n      </tbody>\n      </table>\n    );\n  }\n}\n","\nimport {connect} from 'react-redux';\nimport Grid from './grid';\nimport {advance_symbols_complete} from 'chaos/actions';\n\nimport chaos from 'chaos/chaos';\n\n\nconst mapStateToProps = state => {\n  console.log('mapStateToProps.', state);\n  return {\n    data: chaos.data.map(line => {\n      return line.map(agent => {\n        return {symbol: agent.get_current_symbol('sc1')}; // TEMP! sc1\n      })\n    })\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    on_element_click: id => {\n      console.log('dont believe it works!!! click on', id);\n      //dispatch(main_menu_click(id));\n    },\n  };\n}\n\nconst GridContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Grid);\n\nexport default GridContainer;\n","import { combineReducers } from 'redux';\nimport * as actions from './actions';\n\nlet defaults = {\n  phase: null,\n  tick: 0,\n};\n\nfunction phase(state = defaults.phase, action) {\n  switch (action.type) {\n    case actions.ADVANCE_SYMBOLS_COMPLETE:\n      return 'exchange';\n    default:\n      return state;\n  }\n}\n\nfunction tick(state = defaults.tick, action) {\n  switch (action.type) {\n    case actions.TICK:\n      return state + 1;\n    default:\n      return state;\n  }\n}\n\nconst root_reducer = combineReducers({\n  phase,\n  tick,\n});\n\nexport default root_reducer;\n","\n\n/**\n *  @param function getNeighboursFunc(point) -> [{point: neighbourPoint, weight: integer() | float()}]\n *    return list of all neighbours points with weight to move from given point to it\n *  @param function euristicFunc(pointFrom, pointTo) -> integer() | float()\n *    return estimated distance between two points\n *    for square map its a\n *    Math.abs(pointFrom.location.x - pointTo.location.x) + Math.abs(pointFrom.location.y - pointTo.location.y)\n *    for graphs without any coords representation its a very complicated task, suppose return just 0 (zero)\n *  @param int|float euristicWeight -- euristic distance weight multiplier\n *    you can set it to standard weight of one vertical|horisontal move\n */\nexport default class AStar {\n  constructor(getNeighboursFunc, euristicFunc = false, euristicWeight = 1, pointIndexFunc = false) {\n    this.getNeighboursFunc = getNeighboursFunc;\n    this.euristicFunc = euristicFunc ? euristicFunc : AStar.standardEuristic;\n    this.euristicWeight = euristicWeight;\n    this.pointIndexFunc = pointIndexFunc;\n  }\n\n\n  static standardEuristic(pointFrom, pointTo) {\n    return Math.abs(pointFrom.x - pointTo.x) + Math.abs(pointFrom.y - pointTo.y);\n  }\n\n\n  find(startPoint, finishPoint) {\n    let openList = {},\n        closedList = {};\n    this.addToOpenList(startPoint, 0, null, openList);\n    this.counter = 0; // TEMP\n    return this.step(openList, closedList, finishPoint);\n  }\n\n\n  step(openList, closedList, finishPoint) {\n    this.counter++;\n    if (this.counter > 10000) {\n      throw('counter overflow');\n    }\n    if (this.openListIsEmpty(openList)) {\n      return false; // no way to finish\n    }\n    let pointObj = this.popPointFromOpenList(openList);\n    // TODO -- preferable way is diagonal. do it some way\n    let neighbours = this.getNeighboursFunc(pointObj.point);\n    for (let i = 0; i < neighbours.length; i++) {\n      let e = neighbours[i];\n      let weight = e.weight + pointObj.weight + this.euristicWeight*this.euristicFunc(e.point, finishPoint);\n\n      if (e.point == finishPoint) {\n        let path = [e.point, pointObj.point],\n            iPointObj = pointObj;\n        while (iPointObj.parent != null) {\n          path.push(iPointObj.parent.point);\n          iPointObj = iPointObj.parent;\n        }\n        return path;\n      }\n      else if (this.checkPointInClosedList(e, closedList)) {\n        // just do nothing\n      } else {\n        let foundInOpenList = this.getFromOpenList(e, openList);\n        if (foundInOpenList) {\n          foundInOpenList.parent = pointObj;\n          foundInOpenList.weight = weight;\n        } else {\n          this.addToOpenList(e.point, weight, pointObj, openList);\n        }\n      }\n    }\n    this.addToClosedList(pointObj, closedList);\n    return this.step(openList, closedList, finishPoint);\n  }\n\n\n\n\n  // TODO -- its a hack -- we suggest some imput data structure\n  // TODO -- change the whole func to call to this.pointIndexFunc thru all code\n  listKey(pointObj) {\n    if (this.pointIndexFunc) {\n      return this.pointIndexFunc(pointObj.point);\n    }\n    return pointObj.point.location.x + '|' + pointObj.point.location.y;\n  }\n\n\n  addToOpenList(point, pointWeight, parentPointObj, openList) {\n    let pointObj = {point: point, weight: pointWeight, parent: parentPointObj};\n    openList[this.listKey(pointObj)] = pointObj;\n  }\n\n  openListIsEmpty(openList) {\n    return Object.keys(openList).length == 0;\n  }\n\n  getFromOpenList(pointObj, openList) {\n    return openList[this.listKey(pointObj)];\n  }\n\n  popPointFromOpenList(openList) {\n    let cur = {}, index;\n    for (let i in openList) {\n      if ((openList[i].weight < cur.weight) || !cur.weight) {\n        cur = openList[i];\n        index = i;\n      }\n    }\n    delete(openList[index]);\n    return cur;\n  }\n\n\n\n  addToClosedList(pointObj, closedList) {\n    closedList[this.listKey(pointObj)] = pointObj;\n  }\n\n  checkPointInClosedList(pointObj, closedList) {\n    return closedList[this.listKey(pointObj)] != undefined;\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import Util from \"common/util\";\n\nexport default class Color {\n\n  static random_near([r, g, b], step = 10, count = 2) {\n    return Color.for_rgb([r, g, b], e => Color.random_channel(e, step, count));\n  }\n\n  static random([r, g, b], step = 10) {\n    return Color.for_rgb([r, g, b], e => Color.random_by_floor(e, step));\n  }\n\n  static brighter([r, g, b], step = 10) {\n    return [r, g, b].map(e => Math.min(e + step, 255));\n  }\n\n  static darker([r, g, b], step = 10) {\n    return [r, g, b].map(e => Math.max(e - step, 0));\n  }\n\n  static to_pixi([r, g, b]) {\n    return (r << 16) + (g << 8) + b;\n  }\n\n  // PRIVATE\n  static for_rgb([r, g, b], func) {\n    return [func(r), func(g), func(b)];\n  }\n\n  // PRIVATE\n  static random_channel(base, step, count) {\n    let rand = step*Util.rand(-count, count);\n    let res = base + rand;\n    return res > 255 ? 255 : res < 0 ? 0 : res;\n  }\n\n  // PRIVATE\n  static random_by_floor(floor, step) {\n    return floor - step*Util.rand(0, floor/step | 0);\n  }\n}","import React from 'react';\n\nexport default class ActiveCheckbox extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {checked: props.checked};\n    console.log('SUKA', this.state);\n  }\n\n  handler(event) {\n    let value = this.props.handler(event);\n    this.setState({checked: value});\n  }\n\n  render() {\n    return (\n      <div className=\"form-check\">\n        <label className=\"form-check-label\">\n          <input className=\"form-check-input\" type=\"checkbox\" onChange={this.handler.bind(this)} defaultChecked={this.state.checked} />\n          &nbsp;{this.props.text}\n        </label>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class CollapsiblePanel extends React.Component {\n  constructor(args) {\n    super();\n    this.header = args.header;\n    this.name = args.name;\n    this.content_func = args.content_func;\n  }\n\n  render() {\n    return (\n      <div className=\"panel panel-success\">\n        <div className=\"panel-heading\">\n          <h4 className=\"panel-title\">\n            <a data-toggle=\"collapse\" href={'#'+this.name}>{this.header} <span className=\"caret\"></span></a>\n          </h4>\n        </div>\n        <div id={this.name} className=\"panel-collapse collapse\">\n          <div className=\"panel-body\">\n            {this.content_func()}\n          </div>\n        </div>\n      </div>          \n    );\n  }\n}\n","import React from 'react';\n\nexport default class InputSpinner extends React.Component {\n\n  constructor(args) {\n    super(args);\n    this.state = {value: args.value};\n    this.name = args.name;\n    this.min = args.min ? args.min : 0;\n    this.max = args.max ? args.max : Infinity;\n  }\n\n  click_up(e) {\n    if (this.state.value >= this.max) {\n      return false;\n    }\n    this.update_value(this.state.value + 1);\n    e.preventDefault();\n  }\n\n  click_down(e) {\n    if (this.state.value <= this.min) {\n      return false;\n    }\n    this.update_value(this.state.value - 1);\n    e.preventDefault();\n  }\n\n  manual_set(e) {\n    this.update_value(e.target.value);\n  }\n\n  update_value(new_value) {\n    this.setState({value: new_value});\n  }\n\n  render() {\n    return (\n      <div className=\"input-group\">\n        <span className=\"input-group-btn\">\n          <a className=\"btn btn-danger\" onClick={this.click_down.bind(this)}><span className=\"glyphicon glyphicon-minus\"></span></a>\n        </span>\n        <input id={this.name} type=\"text\" className=\"form-control text-center\" value={this.state.value} onChange={this.manual_set.bind(this)}/>\n        <span className=\"input-group-btn\">\n          <a className=\"btn btn-info\" onClick={this.click_up.bind(this)}><span className=\"glyphicon glyphicon-plus\"></span></a>\n        </span>\n      </div>\n    );\n  }\n}\n","\nexport default class Util {\n\n  static exec_in_cycle_with_delay(index, limit, delay, func, final_func = function() {}) {\n    if ((typeof limit === \"function\" && !limit()) || (index >= limit)) {\n      final_func(index);\n      return;\n    }\n    func(index);\n    setTimeout(function() { Util.exec_in_cycle_with_delay(index+1, limit, delay, func, final_func); }, delay);\n  }\n  \n  static rand(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n\n  static rand_element(arr) {\n    if (arr.length == 0) return false;\n    return arr[Util.rand(0, arr.length-1)];\n  }\n\n  static rand_float(min, max) {\n    return Math.random() * (max - min) + min;\n  };\n\n\n  static normalize_value(value, max, normal_max, min = 0, normal_min = 0) {\n    if (value > max || value < min) {\n      console.log('value out of range', value, max, normal_max, min, normal_min);\n      throw('value out of range');\n    }\n    return (value - min)*(normal_max - normal_min)/(max - min) + normal_min;\n  }\n\n\n  ///////////////////////////////////\n  // ARRAYS\n  ///////////////////////////////////\n  static last(array) {\n    return array.length == 0 ? false : array[array.length - 1];\n  }\n\n  static push_uniq(element, arr) {\n    if (arr.indexOf(element) == -1) {\n      arr.push(element);\n    }\n  }\n\n  static merge(arr1, arr2) {\n    arr2.forEach(e => Util.push_uniq(e, arr1));\n  }\n\n  static remove_element(element, arr) {\n    let index = arr.indexOf(element);\n    if (index !== -1) {\n      arr.splice(index, 1);\n      return true;\n    }\n    return false;\n  }\n\n  static for_all_consecutive_pairs(array, fun) {\n    if (array.length < 2) {\n      return false;\n    }\n    for (let i = 0; i < array.length; i++) {\n      let cur = array[i];\n      let next_index = (i + 1 == array.length) ? 0 : i + 1;\n      let next =  array[next_index];\n      fun(cur, next, i, next_index);\n    }\n  }\n\n  static find_min_and_max(array, value_func) {\n    if (!array.length) return false;\n    let ret = {min: null, max: null, min_element: null, max_element: null};\n    array.forEach(e => {\n      let res = value_func(e);\n      if (isNaN(res) || res === null) return;\n      if (ret.min == null || ret.max == null) {\n        ret.min = res;\n        ret.max = res;\n        ret.min_element = e;\n        ret.max_element = e;\n        return;\n      }\n      if (res < ret.min) {\n        ret.min = res;\n        ret.min_element = e;\n      }\n      if (res > ret.max) {\n        ret.max = res;\n        ret.max_element = e;\n      }\n    });\n    return ret;\n  }\n\n  // ??? experimental. some standard routine for cyclic open_list processing\n  static do_while_not_empty(open_list, func) {\n    let length_before, step = 0;\n    do {\n      length_before = open_list.length;\n      open_list = open_list.filter(element => !func(element, step++));\n      if (length_before == open_list.length) {\n        console.log('do_while_not_empty() open_list length not chenged, bailing out', length_before, open_list);\n        return false;\n      }\n    } while (open_list.length);\n    return true;\n  }\n\n  //////////////////////////////////////////\n  // geometry\n  //////////////////////////////////////////\n  static to_polar_coords(x, y) {\n    let radius = Math.sqrt(x*x + y*y);\n    let angle = Math.atan2(y, x);\n    return {angle: angle, radius: radius};\n  }\n\n  static from_polar_coords(angle, radius) {\n    let x = radius*Math.cos(angle);\n    let y = radius*Math.sin(angle);\n    return {x: x, y: y};\n  }\n\n  static radians(degrees) { return degrees * Math.PI / 180; }\n  static degrees(radians) { return radians * 180 / Math.PI; }\n\n  static angles_diff(a, b) {\n    let diff = Math.abs(a - b);\n    return Math.min(diff, 2 * Math.PI - diff);\n  }\n\n  static move_by_vector(from, to, length) {\n    // why i wrote j_max + 1? thats for last gradient area -- otherwise it will be just a single dot\n    return {x: from.x + (to.x - from.x)*length, y: from.y + (to.y - from.y)*length};\n  }\n\n\n  static convex_polygon_centroid(points) {\n    let p1 = points[0];\n    let square_sum = 0;\n    let xc = 0, yc =0;\n    for (let i = 1; i < points.length-1; i++) {\n      let p2 = points[i];\n      let p3 = points[i+1];\n      let square = ((p1.x - p3.x)*(p2.y - p3.y) - (p2.x - p3.x)*(p1.y - p3.y))/2; // triangle square\n      square_sum += square;\n      xc += square*(p1.x + p2.x + p3.x)/3;\n      yc += square*(p1.y + p2.y + p3.y)/3;\n    }\n    return {x: xc/square_sum, y: yc/square_sum};\n  }\n\n  // points should be sorted by angle to center!!!\n  static convex_polygon_square(points) {\n    let p1 = points[0];\n    let square = 0;\n    for (let i = 1; i < points.length-1; i++) {\n      let p2 = points[i];\n      let p3 = points[i+1];\n      square += Math.abs((p1.x - p3.x)*(p2.y - p3.y) - (p2.x - p3.x)*(p1.y - p3.y))/2;\n    }\n    return square;\n  }\n\n  static distance(p1, p2) {\n    return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2))\n  }\n\n  static gauss_function(x, sigma, mu) {\n    return 1 / (sigma * Math.sqrt(2 * Math.PI)) * Math.pow(Math.E, -(Math.pow(x - mu, 2) / (2 * Math.pow(sigma, 2))));\n  }\n}\n","import Util from \"common/util\";\nimport * as d3 from \"d3\";\n\n/**\n *  we take original voronoi diagram from d3,\n *  add lloyd relaxation\n *  and then reorganize its internal structure, cause its annoying and awful, for my taste\n *  and to each cell we add array of links to neig nodes, sorted by distance\n */\nexport default class VoronoiDiagram {\n  static generate(nodes, width, height, lloyd_relaxation_steps = 0) {\n    let voronoi = d3.voronoi().x(p => p.x).y(p => p.y).size([width, height]);\n    let original_diagram = voronoi(nodes);\n    for (let i = 0; i < lloyd_relaxation_steps; i++) {\n      original_diagram = VoronoiDiagram.lloyd_relaxation(original_diagram, voronoi);\n    }\n    let diagram = {};\n    // rewrite edges and nodes\n    // the problem with original d3 diagram is not only that node is array(2), but also is that\n    // it has nodes duplicates! we are to \"regather\" all nodes\n    diagram.nodes = [];\n    diagram.edges = original_diagram.edges.map(edge => {\n      let node_from, node_to;\n      diagram.nodes.forEach(node => {\n        if (VoronoiDiagram.seems_like_nodes_are_equal(node, edge[0])) {\n          node_from = node;\n        }\n        if (VoronoiDiagram.seems_like_nodes_are_equal(node, edge[1])) {\n          node_to = node;\n        }\n      });\n      if (!node_from) {\n        node_from = {x: edge[0][0], y: edge[0][1], cells: [], links: []};\n        diagram.nodes.push(node_from);\n      }\n      if (!node_to) {\n        node_to = {x: edge[1][0], y: edge[1][1], cells: [], links: []};\n        diagram.nodes.push(node_to);\n      }\n      //node_from.links.push(node_to);\n      Util.push_uniq(node_to, node_from.links);\n      node_to.links.push(node_from);\n      Util.push_uniq(node_from, node_to.links);\n\n      Util.push_uniq(edge.left.data, node_from.cells);\n      Util.push_uniq(edge.left.data, node_to.cells);\n      if (edge.right) {\n        Util.push_uniq(edge.right.data, node_from.cells);\n        Util.push_uniq(edge.right.data, node_to.cells);\n      }\n      return {\n        from: node_from,\n        to: node_to,\n        left: edge.left.data,\n        right: edge.right ? edge.right.data : undefined,\n      };\n    });\n    // rewrite cells\n    diagram.cells = original_diagram.cells.map(orig_cell => {\n      let cell = orig_cell.site.data; // original object!!! and we change it here!!!\n      cell.nodes = diagram.nodes.filter(node => node.cells.indexOf(cell) != -1);\n      cell.nodes.sort((n1, n2) => {\n        let angle1 = Util.to_polar_coords(n1.x - cell.x, n1.y - cell.y).angle;\n        let angle2 = Util.to_polar_coords(n2.x - cell.x, n2.y - cell.y).angle;\n        return angle1 - angle2;\n      })\n      cell.halfedges = orig_cell.halfedges;\n      cell.index = orig_cell.site.index;\n      // !!! we rewrite origin coordinates that COULD change (after lloyd relaxation)\n      cell.x = orig_cell.site[0];\n      cell.y = orig_cell.site[1];\n      return cell;\n    });\n    diagram.cells.forEach(cell => {\n      let links = [];\n      cell.halfedges.forEach(halfedge_index => {\n        let halfedge = diagram.edges[halfedge_index];\n        let link_site = halfedge.left == cell ? halfedge.right : halfedge.left;\n        // near-border halfedges dont have right or left cell \n        if (!link_site) {\n          return;\n        }\n        Util.push_uniq(diagram.cells[link_site.index], links);\n      });\n      // links sorted by distance -- from lowest to highest!\n      links.sort((e1, e2) => Util.distance(cell, e1) - Util.distance(cell, e2));\n      cell.links = links;\n    });\n    diagram.width = width;\n    diagram.height = height;\n\n    // final checks\n    diagram.nodes.forEach(node => {\n      /* its normal -- 4 or more nodes lie on circle\n      if (node.links.length > 3) {\n        console.log(\"ITS TOTAL DISASTER\", node.x, node.y);\n        node.links.forEach(e => console.log(\"DISASTER\", e.x, e.y));\n        //throw('ITS TOTAL DISASTER voronoi diagram');\n      }\n      */\n      if (node.links.length < 2) {\n        console.log(\"a little split\", node.x, node.y, node.links);\n        throw('ITS TOTAL DISASTER voronoi diagram');\n      }\n      /* its normal too\n      if (node.cells.length > 3 || node.cells.length == 0) {\n        console.log(\"BAD cells\", node.x, node.y, node.cells.length);\n        //throw('ITS TOTAL DISASTER voronoi diagram');\n      }\n      */\n    });\n\n    return diagram;\n  }\n\n  // TODO binary tree search\n  static find(point, diagram) {\n    return Util.find_min_and_max(diagram.cells, e => Util.distance(point, e)).min_element;\n  }\n\n\n  static lloyd_relaxation(diagram, voronoi, to_move = 1) {\n    let new_points = diagram.polygons().map(p => {\n      // well, its not real lloyd relaxation, we move new cell center not to centroid, but move\n      // it by value of 'to_move' to direction to centroid\n      let poly = p.map(e => { return {x: e[0], y: e[1]} });\n      let pf = Util.convex_polygon_centroid(poly);\n      return Util.move_by_vector(p.data, pf, to_move);\n    });\n    return voronoi(new_points);\n  }\n\n\n  // PRIVATE. TRY to heal shizophrenia -- different, but very close nodes\n  // but it can lead us to total \n  static seems_like_nodes_are_equal(node, old_node) {\n    let very_close_is = 0.0000000000001;\n    return Math.abs(node.x - old_node[0]) < very_close_is\n        && Math.abs(node.y - old_node[1]) < very_close_is;\n    //return node.x == old_node[0] && node.y == old_node[1];\n  }\n}\n","\nimport Util from \"common/util\";\nimport Color from \"common/color\";\nimport * as d3 from \"d3\";\nimport App from 'experimental/components/app';\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nimport * as PIXI from \"pixi.js\";\n\nexport default class BasicDrawer {\n  constructor(regime) {\n    this.real_size = 800;\n    this.regime = regime;\n    this.ticks = 0;\n    this.tick_speed = 1;\n    this.react_app = React.createElement(App, {additional: this.update_debug_info()});\n    document.addEventListener('DOMContentLoaded', () => {\n      ReactDOM.render(this.react_app, document.querySelector('#app'));\n      this.init();\n    });\n  }\n\n  // TODO update debug info not directly, but from setState()\n  init() {\n    this.pixi = new PIXI.Application(this.real_size, this.real_size, {\n      backgroundColor : Color.to_pixi([0, 0, 0]),\n      antialias: true,\n      view: document.getElementById('view'),\n    });\n    this.pixi.stage.interactive = true; // ??\n    console.log('renderer', this.pixi.renderer);\n\n    this.base_container = new PIXI.Container();\n    if (this.regime == 'square') {\n      // square map is 100x100 size\n      this.size = 100;\n      let scale = this.real_size/this.size | 0;\n      this.base_container.scale = {x: scale, y: scale};\n    } else if (this.regime == 'circle') {\n      // circle map is circle with radils=100, coords from -100 to 100\n      this.size = 200;\n      let scale = this.real_size/this.size | 0;\n      this.base_container.scale = {x: scale, y: scale};\n      this.base_container.position.x = this.real_size / 2 | 0;\n      this.base_container.position.y = this.real_size / 2 | 0;\n    } else if (!this.regime) {\n      throw('regime is not set');\n    } else {\n      throw('unknown regime: '+regime);\n    }\n\n    this.pixi.stage.addChild(this.base_container);\n    document.getElementById('view_container').appendChild(this.pixi.view);\n\n    // copy-paste from Interation\n    document.addEventListener('mousemove', this.mouse_move_handler.bind(this), false);\n    \n    this.ticks = 0; // here?\n    this.tick_time = 0;\n    this.pixi.ticker.add((delta) => {\n      this.ticks++;\n      if (this.ticks % 10 == 0) {\n        d3.select('#fps_counter').html(this.pixi.ticker.FPS | 0);\n        this.update_debug_info().forEach(e => document.getElementById(e.id).innerHTML = e.value);\n      }\n      this.tick_delta = delta;\n      this.tick_time += delta;\n      this.redraw();\n    });\n    //////////////////////////////////\n    this.init_graphics();\n  }\n\n  clear_all() {\n    this.base_container.removeChildren();\n  }\n\n  init_graphics() {\n    \n  }\n\n  redraw() {\n    \n  }\n\n  update_debug_info() {\n    return [];\n  }\n\n\n\n\n\n\n  mouse_move_handler(event) {\n    if (event.target != this.pixi.view) {\n      return false;\n    }\n    let mouse_coords = this.get_mouse_coords(event);\n    d3.select('#mouse_pos').html('{x: '+mouse_coords.x+', y: '+mouse_coords.y+'}');\n  }\n\n  get_mouse_coords(event) {\n    return {x: event.offsetX, y: event.offsetY};\n  }\n}\n","\nimport DebugInfo from 'experimental/components/debug_info';\nimport React from 'react';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {additional: props.additional ? props.additional : []};\n  }\n\n  // bad. but i dont care for now\n  go_back() {\n    window.location.href = \"./samples_collection.html\";\n  }\n\n  render() {\n    return (\n      <div className=\"panel-group\">\n\n        <div className=\"panel panel-success\">\n          <div className=\"panel-body\">\n            <div className=\"\" id=\"back_link\">\n              <button type=\"button\" className=\"btn btn-success btn\" onClick={this.go_back}>\n                <span className=\"glyphicon glyphicon-triangle-left\" aria-hidden=\"true\"></span>\n                &nbsp;back to collection\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"panel panel-success\">\n          <div className=\"panel-body\">\n            <div className=\"\" id=\"view_container\">\n              <canvas id='view' width='800' height='800'></canvas>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"panel panel-success\">\n          <div className=\"panel-body\">\n            <div>\n              <div>FPS: <span id=\"fps_counter\"></span></div>\n              <div>mouse position: <span id=\"mouse_pos\">{0, 0}</span></div>\n              {this.state.additional.map(e => <div key={e.id}>{e.text}: <span id={e.id}>{e.value}</span></div>)}\n            </div>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class DebugInfo extends React.Component {\n  render() {\n    return (\n      <div>\n        <div>FPS: <span id=\"fps_counter\"></span></div>\n        <div>map scale: <span id=\"map_scale\"></span></div>\n        <div>mouse position: <span id=\"mouse_pos\">{0, 0}</span></div>\n        <div>world point: <span id=\"world_pos\">{0, 0}</span></div>\n      </div>\n    );\n  }\n}\n","\nimport React from 'react';\n\nexport default class SamplePreview extends React.Component {\n  constructor(props) {\n    super();\n    const valid_statuses = ['draft', 'in_progress', 'almost_ready', 'ready'];\n\n    if (!props.name || !props.description || !props.sample_url || !props.img_path || !props.status) {\n      console.log('some params missing', props);\n      throw('some params missing');\n    }\n    if (valid_statuses.indexOf(props.status) == -1) {\n      console.log('wrong status', props.status);\n      throw('wrong status');\n    }\n    this.state = {status_text: props.status.replace(/_/g, ' ')};\n  }\n\n\n  render() {\n    return (\n      <div className=\"sample_preview\">\n        <div className=\"panel panel-success\" style={{width: 220}}>\n          <div className=\"panel-heading\">\n            {/* class navbar-text?*/}\n            <div className=\"panel-title\">\n              {this.props.name}\n            </div>\n            <span className={`label label-primary status_${this.props.status}`}>\n              {this.state.status_text}\n            </span>\n          </div>\n          <div className=\"panel-body\">\n            <a href={this.props.sample_url} className=\"thumbnail\">\n              <img width=\"200\" height=\"200\" src={this.props.img_path}/>\n            </a>\n            <div className=\"\">\n              <p>{this.props.description}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","\nimport SamplePreview from \"experimental/components/sample_preview\";\nimport React from 'react';\n\nexport default class SamplesCollecton extends React.Component {\n  render() {\n    return (\n      <div className=\"col-md-8 col-md-offset-2\">\n        <div className=\"panel panel-success\">\n          <div className=\"panel-heading\">\n            <h4 className=\"panel-title\">\n              a collection of funny graphics samples\n            </h4>\n          </div>\n          <div className=\"panel-body\">\n\n            {React.createElement(SamplePreview, {\n              name: 'moving arrows',\n              description: `schizophreniac arrows moving all around.\n                add cosinus interpolation on arrow's turns`,\n              sample_url: './moving_arrows.html',\n              img_path: './thumbnails/moving_arrows.png',\n              status: 'almost_ready',\n            })}\n\n            {React.createElement(SamplePreview, {\n              name: 'planets focus',\n              description: `star system emulation, where we\n                dynamically change focus on random stellar body,\n                i.e. move it to the center of coordinates and make all others spin around it`,\n              sample_url: './planets_focus.html',\n              img_path: './thumbnails/planets_focus.jpg',\n              status: 'in_progress',\n            })}\n\n            {React.createElement(SamplePreview, {\n              name: 'basic random tableau',\n              description: `random start configuration, pixels change their colors with edgy jump from white to black`,\n              sample_url: './basic_tableau.html',\n              img_path: './thumbnails/basic_tableau.jpg',\n              status: 'ready',\n            })}\n\n            {React.createElement(SamplePreview, {\n              name: 'smooth random tableau',\n              description: `random start configuration, pixels change their colors smoothly -- black to white and backward`,\n              sample_url: './smooth_tableau.html',\n              img_path: './thumbnails/smooth_tableau.jpg',\n              status: 'ready',\n            })}\n\n            {React.createElement(SamplePreview, {\n              name: 'rule 30',\n              description: `cellular automaton evolution of rule 30 introduced by stephen wolfram in 1983`,\n              sample_url: './rule_30.html',\n              img_path: './thumbnails/rule_30.jpg',\n              status: 'ready',\n            })}\n\n            {React.createElement(SamplePreview, {\n              name: 'vichniac vote',\n              description: `the color of cell depends on number of black cell in its moore neighborhood and previous\n                self color -- it is black if total numbler black cells is greater than 4`,\n              sample_url: './vichniac_vote.html',\n              img_path: './thumbnails/vichniac_vote.jpg',\n              status: 'ready',\n            })}\n\n            {React.createElement(SamplePreview, {\n              name: 'orbits',\n              description: `experiment with 3d polar functions`,\n              sample_url: './orbits.html',\n              img_path: './thumbnails/orbits.jpg',\n              status: 'in_progress',\n            })}\n\n            {React.createElement(SamplePreview, {\n              name: 'luna',\n              description: `its like moon -- planet with craters on surface`,\n              sample_url: './luna.html',\n              img_path: './thumbnails/luna.jpg',\n              status: 'ready',\n            })}\n\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","\nimport Util from \"common/util\";\nimport Tableau from \"experimental/tableau\";\n\n/**\n * \n */\nexport default class ExpRule extends Tableau {\n  init_element_state(element) {\n    element.color = Math.random() < 0.001 ? 1 : 0;\n  }\n\n  mutate_state() {\n    let step = 5;\n    // throttle to lower speed\n    if (this.ticks % step == 1) {\n      super.mutate_state();\n    }\n    /*if (this.ticks % (30 * step) == 1) {\n      this.init_state();\n    }*/\n  }\n\n  // this func suppose to change new_color prop, not color!\n  mutate_element_state(element) {\n    let x = element.x, y = element.y;\n    let e1 = this.get_element_color(x - 1, y - 1, this.out_of_border_func),\n        e2 = this.get_element_color(x + 0, y - 1, this.out_of_border_func),\n        e3 = this.get_element_color(x + 1, y - 1, this.out_of_border_func),\n        e4 = this.get_element_color(x - 1, y + 0, this.out_of_border_func),\n        e5 = this.get_element_color(x + 0, y + 0, this.out_of_border_func),\n        e6 = this.get_element_color(x + 1, y + 0, this.out_of_border_func),\n        e7 = this.get_element_color(x - 1, y + 1, this.out_of_border_func),\n        e8 = this.get_element_color(x + 0, y + 1, this.out_of_border_func),\n        e9 = this.get_element_color(x + 1, y + 1, this.out_of_border_func);\n    element.new_color = this.rule(e1, e2, e3, e4, e5, e6, e7, e8, e9);\n  }\n\n  out_of_border_func() {\n    return 0;\n    return Util.rand(0, 1);\n  }\n\n  //\n  rule(e1, e2, e3, e4, e5, e6, e7, e8, e9) {\n    if (e5 == 1) {\n      return 1;\n    }\n    let pattern = '' + e1 + e2 + e3 + e4 + e5 + e6 + e7 + e8 + e9;\n    switch (pattern) {\n      case '010000000':\n      case '000100000':\n      case '000001000':\n      case '000000010':\n        return 1;\n      case '101000000':\n      case '100000100':\n      case '001000001':\n      case '000000101':\n        return 1;\n      case '111000000':\n      case '100100100':\n      case '001001001':\n      case '000000111':\n        return 1;\n      //case '010001000':\n      //case '010100000':\n      //case '000001010':\n      //case '000100010':\n        //return 1;\n      //case '100000000':\n      //case '000000001':\n      //case '001000000':\n      //case '000000100':\n        return 1;\n      default:\n        return 0;\n    }\n  }\n}\n\n","\nimport Util from \"common/util\";\nimport Color from \"common/color\";\nimport BasicDrawer from \"experimental/basic_drawer\";\nimport * as PIXI from \"pixi.js\";\nimport Planet from './planet';\n\nexport default class Luna extends Planet {\n  sphere_map() {\n    let map = [];\n    let count_craters = 50;\n    let i = 0;\n    let craters_data = [];\n    while (count_craters) {\n      if (++i > 1000) {\n        throw(\"too many cycles\");\n      }\n      // rotation has no meaning in this case\n      let precession = Util.rand_float(0, 2 * Math.PI);\n      let nutation = Util.rand_float(0, 2 * Math.PI);\n      let crater_diameter = Util.rand_float(Util.radians(1), Util.radians(15));\n      let planet_radius = this.radius;\n      let crossing = craters_data.some(c => {\n        let distance = crater_diameter + c.crater_diameter + Util.radians(2);\n        return this.sphere_angles_distance({precession, nutation}, c) < distance;\n      });\n      if (crossing) {\n        continue;\n      }\n      craters_data.push({precession, nutation, crater_diameter});\n\n      let crater = this.crater(planet_radius, crater_diameter, precession, nutation);\n      map = map.concat(crater);\n      count_craters--;\n    }\n    return map;\n  }\n\n  crater(planet_radius, crater_diameter, precession, nutation) {\n    let data = [];\n    let angle_step = 2 * Math.PI / (1500 * crater_diameter);\n    for (let a = 0; a <= 2 * Math.PI; a += angle_step) {\n      let coords = this.calc_single_point(planet_radius, a, crater_diameter, 0, precession, nutation);\n      let theta = Math.atan2(Math.sqrt(coords.x * coords.x + coords.y * coords.y), coords.z);\n      let phi = Math.atan2(coords.y, coords.x);\n\n      data.push({phi: phi, theta: theta});\n    }\n    return data;\n  }\n\n  sphere_angles_distance(a, b) {\n    let c1 = this.calc_single_point(1, 0, 0, 0, a.precession, a.nutation);\n    let c2 = this.calc_single_point(1, 0, 0, 0, b.precession, b.nutation);\n    let scalar = c1.x * c2.x + c1.y * c2.y + c1.z * c2.z;\n    let module = Math.sqrt(c1.x * c1.x + c1.y * c1.y + c1.z * c1.z) * Math.sqrt(c2.x * c2.x + c2.y * c2.y + c2.z * c2.z)\n    return Math.acos(scalar / module);\n  }\n}\n","\nimport Util from \"common/util\";\nimport Color from \"common/color\";\nimport BasicDrawer from \"experimental/basic_drawer\";\nimport * as PIXI from \"pixi.js\";\n\n/**\n *  TODO:\n *    - add debug info of angle_inc, acceleration, speed\n *    - zooming with speed change? tried, looks bad\n *    - fix graphics redraw leaps!!!\n */\nexport default class MovingArrows extends BasicDrawer {\n  constructor() {\n    super('square');\n  }\n\n  init_graphics() {\n    this.size_coef = 7;\n    this.step = this.size / this.size_coef;\n    this.matrix_size = 2 * this.size;\n    this.arrows = [];\n    this.change_angle_base_threshold = 100;\n    this.change_angle_tick = this.change_angle_base_threshold;\n    this.angle = 2 * Math.PI * Math.random();\n    this.angle_inc = 0;\n    this.angle_inc_max = 2 * Math.PI / 360;\n    this.acceleration = 0;\n    this.max_speed = 1.2;\n    this.min_speed = 0.6;\n    this.speed = (this.max_speed - this.min_speed)/2;\n    this.color = [255, 255, 255];\n    this.matrix_container = new PIXI.Container();\n    this.matrix_container.x = -this.step;\n    this.matrix_container.y = -this.step;\n    this.base_container.addChild(this.matrix_container);\n\n    for (let y = -2 * this.step; y < this.matrix_size; y += this.step) {\n      for (let x = -2 * this.step; x < this.matrix_size; x += this.step) {\n        // git very bad quality on big scales, so we have to set it small and big font size\n        let size = this.step * 9;\n        let arrow = new PIXI.Text('➔', {fontFamily: 'Arial', fontSize: size, fill: Color.to_pixi(this.color)});\n        arrow.scale = {x: 0.1, y: 0.1};\n        arrow.x = x;\n        arrow.y = y;\n        arrow.rotation = this.angle;\n        this.arrows.push(arrow);\n      }\n    }\n    this.arrows.forEach(arrow => this.matrix_container.addChild(arrow));\n  }\n\n\n  redraw() {\n    if (--this.change_angle_tick <= 0) {\n      this.change_angle_tick = this.change_angle_base_threshold * (3 * Math.random() + .2) | 0;\n      let rand_angle = this.linear_interpolation(-this.angle_inc_max, this.angle_inc_max, Math.random());\n      // turn and go straight\n      this.angle_inc = this.angle_inc ? 0 : rand_angle;\n    }\n    this.angle += this.angle_inc;\n    // TODO its very bad that speed depends totally on angle\n    let acceleration = this.angle_inc_max / 2 - Math.abs(this.angle_inc);\n    let new_speed = this.speed + acceleration;\n    new_speed *= this.tick_delta;\n    this.speed = Math.max(this.min_speed, Math.min(new_speed, this.max_speed));\n    \n    let radius = this.speed;\n    let angle = this.angle;\n    let diff = Util.from_polar_coords(angle, radius);\n    this.arrows.forEach(arrow => {\n      // TODO seems too complicated. is there better way?\n      arrow.x = (arrow.x + diff.x) % this.matrix_size + (arrow.x < 0 ? this.matrix_size : 0);\n      arrow.y = (arrow.y + diff.y) % this.matrix_size + (arrow.y < 0 ? this.matrix_size : 0);\n      arrow.rotation = this.angle;\n    });\n  }\n\n  // took it from http://freespace.virgin.net/hugo.elias/models/m_perlin.htm\n  // russian https://habrahabr.ru/post/142592/\n  cos_interpolation(min, max, x) {\n    let f = (1 - Math.cos(Math.PI * x)) * .5;\n    return min*(1-f) + max*f;\n  }\n\n  linear_interpolation(min, max, x) {\n    return  min * (1 - x) + max * x;\n  }\n}\n","\nimport Util from \"common/util\";\nimport Color from \"common/color\";\nimport BasicDrawer from \"experimental/basic_drawer\";\nimport * as PIXI from \"pixi.js\";\n\nexport default class Orbits extends BasicDrawer {\n  constructor() {\n    super('circle');\n  }\n\n  update_debug_info() {\n    return [\n      {id: 'debug_info_precession', text: 'precession', value: this.figures ? this.figures[0].precession_coef : ''},\n      {id: 'debug_info_nutation', text: 'nutation', value: this.figures ? this.figures[0].nutation_coef : ''},\n      {id: 'debug_info_additional', text: 'angle this.acceleration', value: this.acceleration},\n    ];\n  }\n\n  init_graphics() {\n    this.count_figures = 1;\n    this.figures = [...Array(this.count_figures).keys()].map(i => {\n      let graphics = new PIXI.Graphics();\n      this.base_container.addChild(graphics);\n      return {\n        id: i,\n        graphics: graphics,\n        radius: 0.9 * 0.5 * this.size,\n        //rotation_coef: .0025,\n        precession_coef: .0025 * Util.rand_float(-3, 3),\n        nutation_coef: .0025 * Util.rand_float(1, 3),\n      };\n    });\n  }\n\n  redraw() {\n    this.figures.forEach(figure => this.draw_full_circle(figure));\n  }\n\n  calc_single_point(radius, angle, precession, nutation) {\n    let x = radius * Math.cos(angle) * Math.sin(nutation);\n    let y = radius * Math.sin(angle);\n    let sp = Math.sin(precession);\n    let cp = Math.cos(precession);\n    let nx = x * cp - y * sp;\n    let ny = x * sp + y * cp;\n    return {x: nx, y: ny};\n  }\n\n  draw_full_circle(figure) {\n    figure.graphics.clear();\n    let count_dots = 2 * 36;\n    this.acceleration = 5 * Math.cos(.005 * this.tick_time);\n    for (let angle = 0; angle <= 2 * Math.PI; angle += 2 * Math.PI / count_dots) {\n      let coords = this.calc_single_point(\n        figure.radius,\n        //angle + (figure.rotation_coef * this.tick_time) + this.acceleration,\n        // i dont understand why its really this.acceleration and where is the speed?\n        angle + this.acceleration,\n        figure.precession_coef * this.tick_time,\n        figure.nutation_coef * this.tick_time + 0.5 * this.acceleration\n      );\n      figure.graphics.beginFill(Color.to_pixi([255, 255, 255]));\n      //figure.graphics.drawRect(coords.x, coords.y, .5, .5);\n      figure.graphics.drawCircle(coords.x, coords.y, 1);\n      figure.graphics.endFill();\n    }\n  }\n}\n","\nimport Util from \"common/util\";\nimport Color from \"common/color\";\nimport BasicDrawer from \"experimental/basic_drawer\";\nimport * as PIXI from \"pixi.js\";\n\nexport default class Planet extends BasicDrawer {\n  constructor() {\n    super('circle');\n  }\n\n  update_debug_info() {\n    return [\n      {id: 'debug_info_precession', text: 'precession', value: Math.round(Util.degrees(this.precession))},\n      {id: 'debug_info_nutation', text: 'nutation', value: Math.round(Util.degrees(this.nutation))},\n      {id: 'debug_info_rotation', text: 'rotation', value: Math.round(Util.degrees(this.rotation))},\n      {id: 'debug_info_count_points', text: 'count points', value: this.points ? this.points.length: 0},\n    ];\n  }\n\n  init_graphics() {\n    this.planet = new PIXI.Container();\n    this.base_container.addChild(this.planet);\n\n    this.radius = 0.9 * 0.5 * this.size;\n    this.rotation = null;\n    this.precession = null;\n    this.nutation = null;\n    this.points = this.init_graphics_from_sphere_map(this.sphere_map());\n    this.map_transparency_alpha = 0.25;\n    this.draw_contour = true;\n\n    if (this.draw_contour) {\n      let contour = new PIXI.Graphics();\n      contour.lineStyle(1, Color.to_pixi([255, 255, 255]));\n      contour.drawCircle(0, 0, this.radius);\n      this.base_container.addChild(contour);\n    }\n  }\n\n  redraw() {\n    this.change_angles(this.ticks);\n    this.points.forEach(point => {\n      let coords = this.calc_single_point(\n        this.radius,\n        point.phi,\n        point.theta,\n        this.rotation,\n        this.precession,\n        this.nutation\n      );\n      point.graphics.alpha = coords.z < 0 ? this.map_transparency_alpha : 1;\n      point.graphics.x = coords.x;\n      point.graphics.y = coords.y;\n    });\n  }\n\n  calc_single_point(radius, phi, theta, rotation, precession, nutation) {\n    let x = radius * Math.cos(phi) * Math.sin(theta),\n        y = radius * Math.sin(phi) * Math.sin(theta),\n        z = radius * Math.cos(theta),\n        sin_r = Math.sin(rotation), cos_r = Math.cos(rotation),\n        sin_p = Math.sin(precession), cos_p = Math.cos(precession),\n        sin_n = Math.sin(nutation), cos_n = Math.cos(nutation),\n        cos_n_sin_r = cos_n * sin_r, cos_n_cos_r = cos_n * cos_r,\n        x2 = x * (cos_p * cos_r - sin_p * cos_n_sin_r) + y * (-cos_p * sin_r - sin_p * cos_n_cos_r) + z * (sin_p * sin_n),\n        y2 = x * (sin_p * cos_r + cos_p * cos_n_sin_r) + y * (-sin_p * sin_r + cos_p * cos_n_cos_r) + z * (-cos_p * sin_n),\n        z2 = x * (sin_n * sin_r) + y * (sin_n * cos_r) + z * cos_n;\n    return {x: x2, y: y2, z: z2};\n  }\n\n  change_angles(ticks) {\n    this.rotation = Util.radians(0) + ticks * (2 * Math.PI / 360);\n    this.precession = Util.radians(30) + Util.radians(15) * Math.sin(2 * ticks / 360);\n    this.nutation = Util.radians(90 - 30) + Util.radians(15) * Math.cos(2 * ticks / 360);\n  }\n\n  sphere_map() {\n    return [...Array(500).keys()].map(i => {\n      return {\n        phi: Util.rand_float(0, 2 * Math.PI),\n        theta: Util.rand_float(0, 2 * Math.PI),\n      };\n    });\n  }\n\n  init_graphics_from_sphere_map(sphere_map) {\n    return sphere_map.map(e => {\n      e.graphics = new PIXI.Graphics();\n      e.graphics.beginFill(Color.to_pixi([255, 255, 255]), 1);\n      e.graphics.drawRect(0, 0, .0025 * this.size, .0025 * this.size);\n      e.graphics.endFill();\n      this.planet.addChild(e.graphics);\n      return e;\n    });\n  }\n}\n","\nimport Util from \"common/util\";\nimport Color from \"common/color\";\nimport BasicDrawer from \"experimental/basic_drawer\";\nimport * as PIXI from \"pixi.js\";\nimport Planet from './planet';\n\nexport default class PlanetExp extends Planet {\n  init_graphics() {\n    super.init_graphics();\n    this.map_transparency_alpha = 0;\n  }\n\n  sphere_map() {\n    let map = [];\n    let step = 2.5 * 2 * Math.PI / 360;\n    let parallel_num = 0;\n    let count_parallels = 2 * Math.PI / step | 0;\n    for (let theta = 0; theta < 2 * Math.PI; theta += step) {\n      let count_points = 2 * Math.min(parallel_num, count_parallels - parallel_num) + 1;\n      let phi_step = 2 * Math.PI / count_points;\n      console.log('phi_step', parallel_num, count_points);\n      for (let phi = 0; phi < 2 * Math.PI; phi += phi_step) {\n        map.push({phi, theta});\n      }\n      parallel_num++;\n    }\n    return map;\n  }\n}\n","\nimport Util from \"common/util\";\nimport Color from \"common/color\";\nimport BasicDrawer from \"experimental/basic_drawer\";\nimport * as PIXI from \"pixi.js\";\nimport Planet from './planet';\n\nexport default class PlanetExp2 extends Planet {\n  init_graphics() {\n    super.init_graphics();\n    this.map_transparency_alpha = 0;\n  }\n\n  sphere_map() {\n    let map = [];\n    let step = 2 * Math.PI / 36;\n    let amplitude = Util.rand_float(0.1 * step, 0.5 * step);\n    let count_waves = Util.rand(2, 10);\n    for (let altitude = 1 * step; altitude < 2 * Math.PI / 2 - step; altitude += step) {\n      count_waves = altitude / step | 0;\n      map = map.concat(this.sin_ring(amplitude, altitude, count_waves));\n    }\n    return map;\n  }\n\n  sin_ring(amplitude, altitude, count_waves) {\n    let map = [];\n    let steps = 1000;\n    for (let t = 0; t < 2 * Math.PI; t += 2 * Math.PI / steps) {\n      let theta = altitude + amplitude * Math.sin(count_waves * t);\n      let phi = t;\n      map.push({phi, theta});\n    }\n    return map;\n  }\n}\n","\nimport Util from \"common/util\";\nimport Color from \"common/color\";\nimport BasicDrawer from \"experimental/basic_drawer\";\nimport * as PIXI from \"pixi.js\";\nimport * as d3 from \"d3\";\n\n/**\n *\n */\nexport default class PlanetsFocus extends BasicDrawer {\n  constructor() {\n    super('circle');\n  }\n\n  init_graphics() {\n    this.matrix = new PIXI.Container();\n    this.base_container.addChild(this.matrix);\n    this.bodies = [];\n    this.init_bodies();\n    this.forced_focus = false;\n    this.focused_body = this.bodies[0];\n    this.focus_change_threshold = 300;\n    this.focus_change_tick = this.focus_change_threshold;\n    this.update_matrix_by_focus();\n  }\n\n  redraw() {\n    this.bodies.forEach(body => {\n      body.orbital_angle += this.tick_delta * body.orbital_speed;\n      body.angle += this.tick_delta * (body.orbital_speed + body.rotation_speed);\n      this.set_graphics_transform_by_stellar_coords(body);\n    });\n    if (--this.focus_change_tick <= 0) {\n      this.focus_change_tick = this.focus_change_threshold;\n      if (!this.forced_focus) {\n        let cur_index = this.bodies.indexOf(this.focused_body);\n        this.focused_body = this.bodies[cur_index == this.bodies.length - 1 ? 0 : cur_index + 1];\n        console.log('now focus on', this.focused_body.name);\n      }\n    }\n    this.update_matrix_by_focus();\n    d3.select('#debug_info_focus_on').html(this.focused_body.name);\n  }\n\n\n  update_matrix_by_focus() {\n    // TODO do it second time on each frame, bad\n    let coords = this.calc_coords_recursively(this.focused_body);\n    this.matrix.position.x = - coords.x;\n    this.matrix.position.y = - coords.y;\n  }\n\n  calc_coords_recursively(body, acc = {x: 0, y: 0}) {\n    let coords = Util.from_polar_coords(body.orbital_angle, body.orbital_radius);\n    acc.x += coords.x;\n    acc.y += coords.y;\n    if (body.parent) {\n      return this.calc_coords_recursively(body.parent, acc);\n    }\n    return acc;\n  }\n\n\n  init_bodies() {\n    // name, parent, orbital_radius, radius, orbital_speed, rotation_speed, [orbital_angle], [angle]\n    this.star = this.init_body('star', null, 0, 10, 0, .5);\n    this.planet1 = this.init_body('planet1', this.star, 20, 3, 1, 0);\n    this.moon1 = this.init_body('moon1', this.planet1, 6, 1, 2, 2);\n    this.planet2 = this.init_body('planet2', this.star, 40, 5, 2, 3);\n    this.moon21 = this.init_body('moon21', this.planet2, 8, 2, 3, .1);\n    this.moon22 = this.init_body('moon22', this.planet2, 12, 1, 4, 1);\n  }\n\n  init_body(name, parent, orbital_radius, radius, orbital_speed, rotation_speed) {\n    let body = new StellarBody(name, parent, orbital_radius, radius, orbital_speed, rotation_speed);\n    this.init_body_graphics(body, parent);\n    let parent_graphics = parent ? parent.base_container : this.matrix;\n    parent_graphics.addChild(body.base_container);\n    this.bodies.push(body);\n    return body;\n  }\n\n  init_body_graphics(body, parent) {\n    // thats because base_container do not rotate with planet rotation, otherwise\n    // all moons rotate with planet's self rotations\n    body.base_container = new PIXI.Graphics();\n    body.graphics = new PIXI.Graphics();\n    body.base_container.addChild(body.graphics);\n    this.set_graphics_transform_by_stellar_coords(body);\n    body.graphics.lineStyle(body.radius/10, Color.to_pixi([255, 255, 255]));\n    body.graphics.drawCircle(0, 0, body.radius);\n    body.graphics.closePath();\n    ([1, 2, 3]).forEach(i => {\n      let coords = Util.from_polar_coords(i * 2 * Math.PI / 3, body.radius/2);\n      body.graphics.drawCircle(coords.x, coords.y, body.radius/4);\n      body.graphics.closePath();\n    });\n  }\n\n  set_graphics_transform_by_stellar_coords(body) {\n    let coords = Util.from_polar_coords(body.orbital_angle, body.orbital_radius);\n    // thats not a mistake, see comment below\n    body.base_container.x = coords.x;\n    body.base_container.y = coords.y;\n    body.graphics.rotation = body.angle;\n  }\n}\n\nclass StellarBody {\n  constructor(name, parent, orbital_radius, radius, orbital_speed, rotation_speed, orbital_angle = false, angle = false) {\n    let radius_factor = 1.5; // DEBUG!!!\n    this.name = name;\n    this.parent = parent;\n    this.orbital_radius = radius_factor * orbital_radius;\n    this.radius = radius_factor * radius;\n    this.orbital_speed = Util.radians(orbital_speed);\n    this.rotation_speed = Util.radians(rotation_speed);\n    this.orbital_angle = orbital_angle ? orbital_angle : 2 * Math.PI * Math.random();\n    this.angle = angle ? angle : 2 * Math.PI * Math.random();\n  }\n}\n","\nimport Util from \"common/util\";\nimport Tableau from \"experimental/tableau\";\n\n/**\n * https://en.wikipedia.org/wiki/Rule_30\n */\nexport default class Rule30 extends Tableau {\n  \n  init_element_state(element) {\n    //element.color = (element.y == this.y_size - 1) && (element.x == this.x_size / 2 | 0) ? 1 : 0;\n    element.color = 0;\n  }\n\n  mutate_state() {\n    // throttle to lower speed\n    if (this.ticks % 3 == 1) {\n      super.mutate_state();\n    }\n  }\n\n  // this func suppose to change new_color prop, not color!\n  mutate_element_state(element) {\n    let color = 0;\n    if (element.y == this.y_size - 1) {\n      let l = this.get_element_color(element.x - 1, element.y, this.out_of_border_func);\n      let r = this.get_element_color(element.x + 1, element.y, this.out_of_border_func);\n      let s = element.color;\n      color = this.element_state_rule(l, r, s);\n    } else {\n      // just copy lower cell color\n      color = this.data[element.y + 1][element.x].color;\n    }\n    element.new_color = color;\n  }\n\n  /**\n   *  this is the main BAD moment -- we got RANDOM color for cells out of border\n   *  thats NOT CORRECT and so this all is not pure rule 30 evolution, but\n   *  rule 30 with random initial state and random border conditions\n   */\n  out_of_border_func() {\n    return Util.rand(0, 1);  \n  }\n\n  // thats rule 30 itself\n  element_state_rule(l, r, s) {\n    // its a marasmus, but\n    switch ('' + l + r + s) {\n      case '111':\n      case '110':\n      case '101':\n        return 0;\n      case '100':\n      case '011':\n      case '010':\n      case '001':\n        return 1;\n      case '000':\n        return 0;\n      default:\n        throw({msg: \"unknown pattern\", pattern: [l, r, s]});\n    }\n  }\n}\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport SamplesCollecton from 'experimental/components/samples_collection';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  ReactDOM.render(<SamplesCollecton />, document.querySelector('#main'));\n});\n","\nimport Util from \"common/util\";\nimport Color from \"common/color\";\nimport BasicDrawer from \"experimental/basic_drawer\";\nimport * as PIXI from \"pixi.js\";\n\n/**\n *\n */\nexport default class Tableau extends BasicDrawer {\n  constructor() {\n    super('square');\n    this.x_size = 100;\n    this.y_size = 100;\n  }\n\n  init_graphics() {\n    this.color_change_per_tick = 8;\n    this.data = [];\n    let square_size = Math.min(this.size / this.x_size, this.size / this.y_size);\n    for (let y = 0; y < this.y_size; y++) {\n      this.data[y] = [];\n      for (let x = 0; x < this.x_size; x++) {\n        let graphics = new PIXI.Graphics();\n        graphics.beginFill(Color.to_pixi([255, 255, 255]));\n        graphics.drawRect(\n          Util.normalize_value(x, this.x_size, this.size),\n          Util.normalize_value(y, this.y_size, this.size),\n          square_size,\n          square_size\n        );\n        graphics.endFill();\n        this.base_container.addChild(graphics);\n        this.data[y][x] = {\n          x: x,\n          y: y,\n          color: 0,\n          new_color: 0,\n          graphics: graphics,\n        };\n      }\n    }\n    this.init_state();\n    this.update_cells();\n  }\n\n  redraw() {\n    this.mutate_state();    \n    this.update_cells();\n  }\n\n  update_cells() {\n    this.for_all_elements(element => element.graphics.alpha = element.color);\n  }\n\n  for_all_elements(func) {\n    this.data.forEach(line => {\n      line.forEach(element => {\n        func(element);\n      });\n    });\n  }\n\n  init_state() {\n    this.for_all_elements(element => this.init_element_state(element));\n  }\n\n  init_element_state(element) {\n    element.color = Math.random();\n  }\n\n  mutate_state() {\n    this.for_all_elements(element => this.mutate_element_state(element));\n    this.for_all_elements(element => element.color = element.new_color);\n  }\n\n  // this func suppose to change new_color prop, not color!\n  mutate_element_state(element) {\n    element.new_color = (element.color + (this.color_change_per_tick / 256)) % 1;\n  }\n\n  get_element_color(x, y, out_of_border_func) {\n    return this.data[y] && this.data[y][x] ? this.data[y][x].color : out_of_border_func(x, y);\n  }\n}\n","\nimport Util from \"common/util\";\nimport Color from \"common/color\";\nimport Tableau from \"experimental/tableau\";\nimport * as PIXI from \"pixi.js\";\n\n/**\n *\n */\nexport default class TableauSmooth extends Tableau {\n  init_element_state(element) {\n    element.color = Math.random();\n    element.sign = 1;\n  }\n\n  mutate_element_state(element) {\n    if (element.color <= 0) {\n      element.sign = 1;\n    } else if (element.color >= 1) {\n      element.sign = -1;\n    }\n    element.new_color = (element.color + element.sign * (this.color_change_per_tick / 256));\n    // they can be slightly less or greater this because of float calc errors or maybe some my error\n    element.new_color = Math.max(0, element.new_color);\n    element.new_color = Math.min(1, element.new_color);\n  }\n}\n","\nimport Util from \"common/util\";\nimport Color from \"common/color\";\n\n////////////////////////////////////////////////\n// WARNING!!! doesnt work, rewite to BasicDrawer\n////////////////////////////////////////////////\nexport default class BlurGenerator {\n  constructor() {\n    this.map = game.map_drawer.map;\n    this.exp_container = new PIXI.Container();\n    this.map.stage.addChild(this.exp_container);\n  }\n\n  exp_dots() {\n    let points_count_coef = .0050;\n    let points_count = points_count_coef * this.map.view.width * this.map.view.height;\n    let radius_coef = 0.03;\n    let radius = radius_coef * Math.min(this.map.view.width, this.map.view.height);\n    let count_near_threshold = points_count * radius_coef;\n    let steps_count = 10;\n\n    console.log('points_count', points_count, 'radius', radius, 'count_near_threshold', count_near_threshold);\n    let points = [];\n    while (points_count--) {\n      points.push({x: Util.rand(0, this.map.view.width), y: Util.rand(0, this.map.view.height)});\n    }\n    let basic_color = [60, 30, 0];\n    while (--steps_count) {\n      basic_color = Color.brighter(basic_color, 20);\n      this.exp_dots_step(radius, count_near_threshold / steps_count | 0, points, basic_color);\n    }\n    points.forEach(point => this.exp_dots_draw_circle(point.x, point.y, 2, [200, 100, 0]));\n  }\n\n  exp_dots_step(radius, count_near_threshold, points, color) {\n    console.log('exp_dots_step radius', radius, 'threshold', count_near_threshold);\n    let nears_sum = 10;\n    points.forEach(point => {\n      let count_near = this.exp_dots_count_near(point, radius, points);\n      nears_sum += count_near;\n      if (count_near >= count_near_threshold) {\n        this.exp_dots_draw_circle(point.x, point.y, radius, color);\n      }\n    });\n    console.log('near mid', nears_sum / points.length);\n  }\n\n  exp_dots_draw_circle(x, y, radius, color) {\n    let graphics = new PIXI.Graphics();\n    graphics.beginFill(Color.to_pixi(color));\n    graphics.drawCircle(x, y, radius);\n    graphics.closePath();\n    graphics.endFill();\n    this.exp_container.addChild(graphics);\n  }\n\n  exp_dots_count_near(from, radius, points) {\n    let filtered = points.filter(point => Util.distance(from, point) <= radius);\n    return filtered.length - 1;\n  }\n\n}","\nimport Util from \"common/util\";\nimport Color from \"common/color\";\nimport * as d3 from \"d3\";\n\n////////////////////////////////////////////////\n// WARNING!!! doesnt work, rewite to BasicDrawer\n////////////////////////////////////////////////\nexport default class DensityMap {\n  constructor() {\n    this.reject_limit = 500;\n    this.average_distance_threshold = 0.05;\n    this.zero_distance_sum = 0;\n  }\n\n  random_point(initial = false) {\n    return {x: 2 * Math.random() - 1, y: 2 * Math.random() - 1, initial: initial};\n  }\n\n  generate(count, count_basic = 10) {\n    let reject_counter = this.reject_limit;\n    let total_rejects = 0;\n    this.points = [];\n    // basic points\n    while (count_basic) {\n      let point = this.random_point(true);\n      if (this.check_in_circle(point)) {\n        this.points.push(point);\n        count_basic--;\n      }\n    }\n    // regular points\n    while (this.points.length < count) {\n      let point = this.random_point(false);\n      if (!this.check_in_circle(point)) {\n        continue; // do not decrement reject_counter\n      }\n      if (!this.check_average_distance(point)) {\n        reject_counter--;\n        total_rejects++;\n      } else {\n        reject_counter = this.reject_limit;\n        this.points.push(point);\n        this.zero_distance_sum += Util.distance(point, {x: 0, y: 0});\n      }\n      if (!reject_counter) {\n        console.log(`DensityMap.generate() reject limit ${this.reject_limit} reached, bailing out`);\n        break;\n      }\n    }\n    console.log('done, total_rejects: ', total_rejects);\n    return true;\n  }\n\n\n  check_in_circle(point) {\n    return Util.distance(point, {x: 0, y: 0}) <= 1;\n  }\n\n\n  calc_distance_sum(point) {\n    return this.points.reduce((acc, e) => acc + Util.distance(point, e), 0);\n  }\n\n  check_average_distance(point) {\n    let value = Util.find_min_and_max(this.points, (p) => Util.distance(p, point)).min;\n    //console.log('value', value);\n    // its like some little chanse for far points\n    let rand = value * Math.pow(Math.random(), 100);\n    return value < this.average_distance_threshold + rand;\n  }\n\n\n\n  draw(scale, func = this.draw_naive.bind(this)) {\n    let graphics = new PIXI.Graphics();\n    func(scale, graphics);\n    return graphics;\n  }\n\n\n  draw_naive(scale, graphics) {\n    let radius = .01;\n    this.points.forEach(point => {\n      //let color = point.initial ? [125, 255, 0] : [point.channel, 0, 0];\n      let color = point.initial ? [125, 255, 0] : [125, 0, 0];\n      graphics.beginFill(Color.to_pixi(color));\n      graphics.drawCircle(scale * point.x, scale * point.y, scale * radius);\n      graphics.closePath();\n      graphics.endFill();\n    });\n  }\n\n  draw_density_grid(scale, graphics, size = 100) {\n    let step = (1 - -1)/size;\n    let grid_points = [];\n    for (let y = -1; y < 1; y += step) {\n      for (let x = -1; x < 1; x += step) {\n        let grid_point = {x: x, y: y, density: 0};\n        if (!this.check_in_circle(grid_point)) {\n          continue;\n        }\n        grid_point.density = this.points.filter(p => p.x >= x && p.y >= y && p.x < x + step && p.y < y + step).length;\n        grid_points.push(grid_point);\n      }\n    }\n    let max_density = Util.find_min_and_max(grid_points, (p) => p.density).max;\n    grid_points.forEach(point => {\n      let channel = Util.normalize_value(point.density, max_density, 255, 0, 20);\n      graphics.beginFill(Color.to_pixi([channel, 0, 0]));\n      graphics.drawCircle(scale * point.x, scale * point.y, scale * (step / 2));\n      graphics.closePath();\n      graphics.endFill();\n    });\n  }\n}","\nimport Util from \"common/util\";\nimport Color from \"common/color\";\nimport * as d3 from \"d3\";\n\n////////////////////////////////////////////////\n// WARNING!!! doesnt work, rewite to BasicDrawer\n////////////////////////////////////////////////\nexport default class Links {\n  constructor() {\n    this.points = [];\n    this.size = 10;\n    let angle_divider = 1.5 * this.size | 0;\n    this.angle = Math.PI / angle_divider;\n    console.log(`Links size: ${this.size}, angle divider: ${angle_divider}`);\n  }\n\n  random_point() {\n    return {x: 2 * Math.random() - 1, y: 2 * Math.random() - 1};\n  }\n\n  generate() {\n    let border_points = [];\n    let grid_points = [];\n    for (let a = 0; a < Math.PI * 2; a += this.angle) {\n      let point = Util.from_polar_coords(a, 1);\n      point.on_border = true;\n      this.points.push(point);\n      border_points.push(point);\n    }\n    let step = this.calc_step();\n    for (let y = -1; y < 1; y += step) {\n      for (let x = -1; x < 1; x += step) {\n        let point = {x: x, y: y, on_border: false};\n        if (!this.check_in_circle(point, 1 - step/2)) {\n          continue;\n        }\n        this.points.push(point);\n        grid_points.push(point);\n      }\n    }\n    \n    let all_points = grid_points.concat(border_points);\n    grid_points.forEach(point => point.links = all_points.filter(p => Util.distance(point, p) <= 1.5 * step));\n    let open_list = grid_points.slice();\n    // note that we process only grid points!\n    this.process_links(open_list);\n  }\n\n  process_links(open_list) {\n    if (!open_list.length) {\n      return;\n    }\n    let element = Util.rand_element(open_list);\n    if (element.links.length < 2) {\n      throw('bad element, less than 2 links');\n    }\n    let count_border = element.links.filter(e => e.on_border).length;\n    // if only one link to border point left, dont delete it\n    let links_to_process = count_border > 1 ? element.links : element.links.filter(e => !e.on_border);\n    let link_to_delete = Util.rand_element(links_to_process);\n    Util.remove_element(link_to_delete, element.links);\n    if (element.links.length <= 2) {\n      Util.remove_element(element, open_list);\n    }\n    // on-border points dont have links\n    if (!link_to_delete.on_border) {\n      if (!Util.remove_element(element, link_to_delete.links)) {\n        console.log('WARNING! linked element had no backlink', link_to_delete, element);\n      }\n      if (link_to_delete.links.length < 2 && !link_to_delete.on_border) {\n        console.log('too bad but some point now has less that 2 links', link_to_delete);\n      }\n      if (link_to_delete.links.length <= 2) {\n        Util.remove_element(link_to_delete, open_list);\n      }\n    }\n    this.process_links(open_list);\n  }\n\n  check_in_circle(point, radius = 1) {\n    return Util.distance(point, {x: 0, y: 0}) < radius;\n  }\n\n  calc_step() {\n    return (1 - -1)/this.size;\n  }\n\n\n\n\n  draw(scale, func = this.draw_naive.bind(this)) {\n    let graphics = new PIXI.Graphics();\n    //graphics.scale = {x: scale, y: scale};\n    func(graphics, scale);\n    return graphics;\n  }\n\n\n  draw_naive(graphics, scale = 1) {\n    let step = this.calc_step();\n    let radius = step / 6;\n    let color = [30, 0, 0];\n    \n    this.points.forEach(point => {\n      graphics.beginFill(Color.to_pixi(color));\n      graphics.drawCircle(scale * point.x, scale * point.y, scale * radius);\n      graphics.closePath();\n      graphics.endFill();\n\n      if (point.links) {\n        point.links.forEach(link => {\n          graphics.lineStyle(scale * step / 10, Color.to_pixi(color));\n          graphics.moveTo(scale * point.x, scale * point.y);\n          graphics.lineTo(scale * link.x, scale * link.y);\n          graphics.closePath();\n          graphics.lineStyle(0, Color.to_pixi(color));\n        });\n      }\n    });\n  }\n}\n","\nimport Util from \"common/util\";\nimport Color from \"common/color\";\nimport * as d3 from \"d3\";\n\n////////////////////////////////////////////////\n// WARNING!!! doesnt work, rewite to BasicDrawer\n////////////////////////////////////////////////\nexport default class PointsInCicrle {\n\n  generate(count, func) {\n    this.points = [];\n    while(count--) {\n      let angle = Math.random() * 2 * Math.PI;\n      let radius = func(Math.random());\n      let coords = Util.from_polar_coords(angle, radius);\n      this.points.push({angle: angle, radius: radius, x: coords.x, y: coords.y});\n    }\n    this.points;\n    return true;\n  }\n\n  static linear(random) {\n    return random;\n  }\n\n  static pow(random) {\n    return Math.pow(random, 0.2);\n  }\n\n  draw(scale, color = [50, 100, 0]) {\n    let graphics = new PIXI.Graphics();\n    let radius = .01;\n\n    this.points.forEach(point => {\n      graphics.beginFill(Color.to_pixi(Color.random_near(color, 20)));\n      graphics.drawCircle(scale * point.x, scale * point.y, scale * radius);\n      graphics.closePath();\n      graphics.endFill();\n    });\n\n    return graphics;\n  }\n\n  draw_triangles(scale, color = [50, 100, 0]) {\n    let voronoi = d3.voronoi().x(p => p.x).y(p => p.y);\n    let diagram = voronoi(this.points);\n    let triangles = diagram.triangles();\n\n    let graphics = new PIXI.Graphics();\n    triangles.forEach(triangle => {\n      graphics.beginFill(Color.to_pixi(Color.random_near(color, 20)));\n      graphics.drawPolygon(triangle.map(point => new PIXI.Point(scale * point.x, scale * point.y)));\n      graphics.closePath();\n      graphics.endFill();\n    });\n    graphics.lineStyle(scale * .005, Color.to_pixi(Color.brighter(color, 100)));\n    /*\n    very strange and beautiful\n    diagram.edges.forEach(edge => {\n      if (!edge[1]) {\n        return;\n      }\n      graphics.moveTo(scale * edge[0][0], scale * edge[0][1]);\n      graphics.lineTo(scale * edge[1][0], scale * edge[1][1]);\n      graphics.closePath();\n    });\n    */\n    triangles.forEach(triangle => {\n      // pixi has sharp angles when joining lines in path, so do not use path\n      graphics.moveTo(scale * triangle[0].x, scale * triangle[0].y);\n      graphics.lineTo(scale * triangle[1].x, scale * triangle[1].y);\n      graphics.moveTo(scale * triangle[1].x, scale * triangle[1].y);\n      graphics.lineTo(scale * triangle[2].x, scale * triangle[2].y);\n      graphics.moveTo(scale * triangle[2].x, scale * triangle[2].y);\n      graphics.lineTo(scale * triangle[0].x, scale * triangle[0].y);\n    });\n    return graphics;\n  }\n}","\nimport Util from \"common/util\";\nimport Tableau from \"experimental/tableau\";\n\n/**\n * \n */\nexport default class VichniacVote extends Tableau {\n  constructor() {\n    super();\n    this.x_size = 200;\n    this.y_size = 200;\n  }\n\n\n  init_element_state(element) {\n    element.color = Math.random() > 0.5 ? 1 : 0;\n  }\n\n  mutate_state() {\n    let step = 15;\n    // throttle to lower speed\n    if (this.ticks % step == 1) {\n      super.mutate_state();\n    }\n    if (this.ticks % (30 * step) == 1) {\n      this.init_state();\n    }\n  }\n\n  // this func suppose to change new_color prop, not color!\n  mutate_element_state(element) {\n    let x = element.x, y = element.y;\n    let e1 = this.get_element_color(x - 1, y - 1, this.out_of_border_func),\n        e2 = this.get_element_color(x + 0, y - 1, this.out_of_border_func),\n        e3 = this.get_element_color(x + 1, y - 1, this.out_of_border_func),\n        e4 = this.get_element_color(x - 1, y + 0, this.out_of_border_func),\n        e5 = this.get_element_color(x + 0, y + 0, this.out_of_border_func),\n        e6 = this.get_element_color(x + 1, y + 0, this.out_of_border_func),\n        e7 = this.get_element_color(x - 1, y + 1, this.out_of_border_func),\n        e8 = this.get_element_color(x + 0, y + 1, this.out_of_border_func),\n        e9 = this.get_element_color(x + 1, y + 1, this.out_of_border_func);\n    element.new_color = e1 + e2 + e3 + e4 + e5 + e6 + e7 + e8 + e9 > 4 ? 1 : 0;\n  }\n\n  out_of_border_func() {\n    return 1;\n  }\n}\n","import Util from \"common/util\";\nimport VoronoiDiagram from \"common/voronoi_diagram\";\nimport Color from \"common/color\";\n\nexport default class BallsGenerator {\n  constructor(diagram, color_map, drawer) {\n    this.diagram = diagram;\n    this.color_map = color_map;\n    this.drawer = drawer;\n  }\n\n  generate() {\n    let num_balls = 0.6 * this.drawer.map.view.width * this.drawer.map.view.height | 0;\n    console.log('num_balls', num_balls);\n    let ball_radius_min = 1;\n    let ball_radius_max = 5;\n    let color_step = 5;\n    let color_count = 2;\n    let graphics = new PIXI.Graphics();\n    while (num_balls--) {\n      let rx = Util.rand(1, this.drawer.map.view.width - 1);\n      let ry = Util.rand(1, this.drawer.map.view.height - 1);\n      let cell = VoronoiDiagram.find({x: rx, y: ry}, this.diagram);\n      let base = this.color_map[cell.geo_type];\n      let color = Color.random_near(base, color_step, color_count);\n      let radius = Util.rand(ball_radius_min, ball_radius_max);\n      graphics.beginFill(Color.to_pixi(color));\n      graphics.drawCircle(rx, ry, radius);\n      graphics.endFill();\n    }\n    let texture = graphics.generateCanvasTexture(PIXI.SCALE_MODES.LINEAR);\n    let sprite = new PIXI.Sprite(texture);\n    this.drawer.layers['geo'].addChild(sprite);\n  }\n}","import React from 'react';\nimport CollapsiblePanel from 'common/components/collapsible_panel';\nimport DebugInfo from 'geo/components/debug_info';\nimport GenerateWorldForm from 'geo/components/generate_world_form';\nimport DrawingSettingsForm from 'geo/components/drawing_settings_form';\nimport RoadsForm from 'geo/components/roads_form';\nimport Legend from 'geo/components/legend';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <table style={{margin: '5px', borderSpacing: '5px', borderCollapse: 'separate'}}>\n      <tbody>\n        <tr style={{verticalAlign: 'top'}}>\n          <td>\n\n            <div className=\"panel-group\">\n              <div className=\"panel panel-success\">\n                <div className=\"panel-body\">\n                  <div className=\"\" id=\"map_container\">\n                    <canvas id='map' width='800' height='800'></canvas>\n                  </div>\n                </div>\n              </div>\n\n              <CollapsiblePanel header=\"debug\" name=\"debug\" content_func={() => React.createElement(DebugInfo)} />\n              \n            </div>\n\n          </td>\n          <td width=\"100%\">\n\n            <div className=\"panel-group\">\n              <div className=\"panel panel-success\">\n                <div className=\"panel-body\">\n\n                  <CollapsiblePanel header=\"world generating\" name=\"generate_world\" content_func={() => React.createElement(GenerateWorldForm)} />\n                  \n                  <CollapsiblePanel header=\"drawing settings\" name=\"drawing_settings\" content_func={() => React.createElement(DrawingSettingsForm)} />\n\n                  <CollapsiblePanel header=\"roads\" name=\"roads\" content_func={() => React.createElement(RoadsForm)} />\n\n                </div>\n                <div className=\"panel-footer\">\n                  <CollapsiblePanel header=\"legend\" name=\"legend\" content_func={() => React.createElement(Legend)} />\n                </div>\n              </div>\n            </div>\n\n          </td>\n        </tr>\n      </tbody>\n      </table>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class DebugInfo extends React.Component {\n  render() {\n    return (\n      <div>\n        <div>FPS: <span id=\"fps_counter\"></span></div>\n        <div>map scale: <span id=\"map_scale\"></span></div>\n        <div>mouse position: <span id=\"mouse_pos\">{0, 0}</span></div>\n        <div>world point: <span id=\"world_pos\">{0, 0}</span></div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport InputSpinner from 'common/components/input_spinner';\nimport ActiveCheckbox from 'common/components/active_checkbox';\nimport {game} from \"geo/game\";\n\nexport default class DrawingSettingsForm extends React.Component {\n\n  submit(e) {\n    e.preventDefault();\n  }\n  \n  constructor() {\n    super();\n  }\n\n  checkbox_handler(event, checkbox_type) {\n    game.map_drawer.draw_voronoi_diagram = !game.map_drawer.draw_voronoi_diagram;\n    game.map_drawer.set_layers_visibility();\n    this.setState({});\n  }\n\n  create_checkbox(prop_name, text) {\n    return React.createElement(ActiveCheckbox, {\n      checked: game.map_drawer[prop_name],\n      handler: () => {\n        game.map_drawer[prop_name] = !game.map_drawer[prop_name];\n        game.map_drawer.set_layers_visibility();\n        return game.map_drawer[prop_name];\n      },\n      text: text,\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <form className=\"form-horizontal\">\n          {this.create_checkbox('draw_voronoi_diagram', 'draw voronoi diagram')}\n        </form>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport InputSpinner from 'common/components/input_spinner';\nimport {game} from \"geo/game\";\n\nexport default class GenerateWorldForm extends React.Component {\n\n  submit(e) {\n    game.rrt_epsilon = parseInt(document.querySelector('#gwf_rrt_epsilon').value);\n    e.preventDefault();\n    console.clear();\n    game.map_drawer.map.stage.children.forEach(layer => layer.removeChildren());\n    game.generate_map();\n  }\n\n  render() {\n    return (\n      <div>\n        <form className=\"form-horizontal\">\n          <div className=\"form-group\">\n            <label htmlFor=\"epsilon\" className=\"col-sm-4 control-label\">rrt nodes distance</label>\n            <div className=\"col-sm-8\"><InputSpinner name='gwf_rrt_epsilon' value={game.rrt_epsilon}/></div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-sm-offset-4 col-sm-8\">\n              <button type=\"button\" className=\"btn btn-default\" id=\"generate_world\" onClick={this.submit.bind(this)}>generate</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class Legend extends React.Component {\n  render() {\n    return (\n      <div>\n        <p>here will be map legend...</p>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class RoadsForm extends React.Component {\n  render() {\n    return (\n      <div>\n        <form className=\"form-horizontal\">\n          <p>in test mode for now, nothing works...</p>\n          <button type=\"button\" className=\"btn btn-success\" id=\"build_road\">build road</button>\n          <div id=\"road_text\"></div>\n        </form>\n      </div>\n    );\n  }\n}\n","\nimport Util from \"common/util\";\nimport VoronoiDiagram from \"common/voronoi_diagram\";\nimport RegionsGatherer from \"geo/regions_gatherer\";\nimport RRTDiagram from \"geo/rrt_diagram\";\nimport Geo from \"geo/geo\";\nimport AStar from \"common/a_star\";\nimport Interaction from \"geo/interaction\";\nimport MapDrawer from \"geo/map_drawer\";\nimport App from 'geo/components/app';\nimport ReactDOM from 'react-dom';\nimport React from 'react';\n\nclass Game {\n  constructor() {\n    // CONST\n    this.width = 800;\n    this.height = 800;\n    this.cells_count = Infinity;\n    this.rrt_epsilon = 35;\n    this.rrt_reject_limit = 500;\n    this.map_drawer = new MapDrawer();\n    this.interaction = new Interaction();\n  }\n\n  generate_map() {\n    this.rrt = new RRTDiagram(this.width, this.height);\n    this.rrt.generate(this.rrt_epsilon, this.cells_count, this.rrt_reject_limit);\n    this.diagram = VoronoiDiagram.generate(this.rrt.nodes, this.width, this.height);\n\n    // find closes point\n    this.diagram.cells.forEach(cell => cell.closest_backlinks = []);\n    this.diagram.cells.forEach(cell => {\n      cell.closest_link = cell.links[0];\n      Util.push_uniq(cell, cell.closest_link.closest_backlinks);\n    });\n\n    // find close-to-border \n    this.diagram.cells.forEach(cell => { cell.on_border = false; });\n    this.diagram.edges.forEach(edge => {\n      if (!edge.right) {\n        edge.on_border = true;\n        edge.from.on_border = true;\n        edge.to.on_border = true;\n        this.diagram.cells[edge.left.index].on_border = true;\n      }\n    });\n\n    this.map_drawer.init(this.diagram, this.rrt, this.width, this.height);\n    this.interaction.init();\n    this.geo = new Geo(this.diagram, this.rrt, this.map_drawer);\n    this.map_drawer.draw();\n\n    this.map_drawer.highlight_bad_river_links();\n    this.map_drawer.highlight_local_minimums();\n    //this.map_drawer.print_text_for_each_cell(cell => cell.fertility);\n  }\n}\n\nlet game = new Game();\nmodule.exports.game = game; // OMG global export BAD WAY\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  ReactDOM.render(<App />, document.querySelector('#app'));\n  game.generate_map();\n});\n","import Util from \"common/util\";\nimport RRTDiagram from \"geo/rrt_diagram\";\nimport RiversAndLakesGenerator from \"geo/rivers_and_lakes_generator\";\n\n\nexport default class Geo {\n  constructor(diagram, rrt, map_drawer) {\n    this.map_drawer = map_drawer;\n    this.sea_ratio = 0.3;\n    this.rock_height_ratio = 0.75;\n    this.rrt_regions = 3;\n    this.diagram = diagram;\n    this.rrt = rrt;\n    let max_branch_order = Util.find_min_and_max(this.rrt.nodes, node => node.branch_order).max;\n    console.log('WE GONNA remove_some_links_and_recalc_all', this.rrt_regions - 1);\n    let deleted_links = this.rrt.remove_some_links_and_recalc_all(this.rrt_regions - 1, max_branch_order - 10, max_branch_order - 2);\n    let centers = this.rrt.nodes.filter(node => node.generation == 0);\n    console.log('rrt centers', centers);\n    this.init_height();\n    this.generate_heights_by_rrt_generations();\n    this.generate_heights_by_rrt_branches_length();\n    this.height_smooth(); // experimental\n    this.set_nodes_height_by_cell_height();\n    this.generate_sea(this.sea_ratio);\n\n    //this.map_drawer.print_text_for_each_cell(cell => cell.branch_order);\n    this.rrt.restore_removed_links(deleted_links);\n    this.map_drawer.highlight_deleted_links(deleted_links);\n\n    this.generate_rivers();\n    this.generate_rocks_by_height()\n    this.calc_fertility();\n    this.geo_types_by_fertility();\n  }\n\n\n  generate_sea(sea_ratio) {\n    let sea_cells_threshold = Math.floor(sea_ratio * this.diagram.cells.length);\n    let count_sea_cells = 0;\n    for (let i in this.heights_stat()) {\n      if (count_sea_cells >= sea_cells_threshold) {\n        break;\n      }\n      let open_list = [];\n      this.diagram.cells.forEach(cell => {\n        if (cell.height <= i && cell.geo_type != 'sea') {\n          open_list.push(cell);\n        }\n      });\n      let length_before;\n      do {\n        length_before = open_list.length;\n        open_list = open_list.filter(cell => {\n          // we dont set sea type to inland regions, only to connected to other seas\n          if (cell.on_border || cell.links.some(c => c.geo_type == 'sea')) {\n            cell.geo_type = 'sea';\n            count_sea_cells++;\n            return false;\n          }\n          return true;\n        });\n      } while (open_list.length && length_before != open_list.length);\n    }\n    // set shores\n    this.diagram.cells.forEach(cell => {\n      cell.shore = cell.geo_type != 'sea' && cell.links.some(c => c.geo_type == 'sea');\n    });\n  }\n\n\n  generate_rocks_by_height() {\n    let max_height = Util.find_min_and_max(this.rrt.nodes, e => e.height).max;\n    this.rock_from_height = Math.ceil(this.rock_height_ratio*max_height);\n    this.diagram.cells.forEach(cell => {\n      if (cell.height >= this.rock_from_height) {\n        cell.geo_type = 'rock';\n      }\n    });\n  }\n\n  generate_rivers() {\n    RiversAndLakesGenerator.generate_by_edges(this.diagram);\n  }\n\n  calc_fertility() {\n    let square_sum = 0;\n    this.diagram.cells.forEach(cell => square_sum += Util.convex_polygon_square(cell.nodes));\n    let fertility_multiplier = Math.round(square_sum / this.diagram.cells.length);\n\n    this.diagram.cells.forEach(cell => {\n      if (cell.geo_type == 'sea') {\n        cell.fertility = 0;\n        return;\n      }\n      let sum_rivers_strength = 0;\n      let square = Util.convex_polygon_square(cell.nodes);\n      cell.nodes.forEach(node => sum_rivers_strength += node.river ? node.river.strength : 0);\n      cell.fertility = Math.ceil(fertility_multiplier * sum_rivers_strength / square);\n    });\n  }\n\n\n  geo_types_by_fertility() {\n    let stats = [];\n    this.diagram.cells.forEach(cell => Util.push_uniq(cell.fertility, stats));\n    stats.sort((e1, e2) => e1 - e2);\n    let min = stats[0];\n    let max = stats[Math.floor(0.95 * stats.length)]; // 95% persentile cause there's big gaps in the end\n    let geo_type_fertility_thresholds = {\n      bog: Util.normalize_value(0.55, 1, max, 0, min),\n      grass: Util.normalize_value(0.15, 1, max, 0, min),\n      steppe: Util.normalize_value(0.05, 1, max, 0, min),\n      desert: Util.normalize_value(0.0, 1, max, 0, min),\n    };\n\n    this.diagram.cells.forEach(cell => {\n      if (cell.geo_type) {\n        return;\n      }\n      for (let i in geo_type_fertility_thresholds) {\n        if (cell.fertility >= geo_type_fertility_thresholds[i]) {\n          cell.geo_type = i;\n          break;\n        }\n      }\n    });\n  }\n\n  init_height() {\n    this.rrt.nodes.forEach(node => node.height = 0);\n  }\n\n  generate_heights_by_rrt_branches_length(step = 10, floor_level = 0) {\n    this.rrt.nodes.forEach(node => node.height += step * node.branch_order + floor_level);\n  }\n\n  height_smooth(max_diff_coef = 0.3) {\n    let h = Util.find_min_and_max(this.rrt.nodes, node => node.height);\n    let max_diff = max_diff_coef * (h.max - h.min);\n    let changed = 0;\n    do {\n      changed = 0;\n      this.diagram.cells.forEach(cell => {\n        let max_height = Util.find_min_and_max(cell.links, c => c.height).max;\n        let height_to_max_diff = max_height - max_diff;\n        if (cell.height < height_to_max_diff) {\n          cell.height = height_to_max_diff;\n          changed++;\n        }\n      });\n      console.log('height smooth cycle cells changed', changed);\n    } while (changed > 0);\n  }\n\n  \n  generate_heights_by_rrt_generations(peak_max_height = 200, peak_min_height = 200, step = 2) {\n    let peak_height = Util.rand(peak_min_height, peak_max_height);\n    this.rrt.nodes.forEach(node => node.height += Math.max(node.height, peak_height - step * node.generation));\n  }\n\n  set_nodes_height_by_cell_height() {\n    this.diagram.nodes.forEach(node => {\n      //node.height = Math.round(node.cells.reduce((acc, cell) => cell.height + acc, 0) / node.cells.length);\n      node.height = Util.find_min_and_max(node.cells, cell => cell.height).min;\n    });\n  }\n\n\n  // for seas and like that\n  heights_stat() {\n    let stat = [];\n    this.diagram.cells.forEach(cell => {\n      if (!stat[cell.height]) stat[cell.height] = 0;\n      stat[cell.height]++;\n    });\n    //stat.forEach((e, i) => console.log('height', i, e));\n    return stat;\n  }\n}\n","import Util from \"common/util\";\nimport VoronoiDiagram from \"common/voronoi_diagram\";\nimport * as d3 from \"d3\";\nimport {game} from \"geo/game\";\n\nexport default class Interaction {\n  constructor() {\n    this.cell_under_cursor = null;\n    this.state = 'initial';\n  }\n\n  init() {\n    this.game = game;\n    document.getElementById('build_road').onclick = this.build_road_button_handler.bind(this);\n    this.map = this.game.map_drawer.map;\n    this.map.stage.interactive = true;\n\n    document.addEventListener('mousemove', this.map_mouse_move_handler.bind(this), false);\n\n    d3.select('#map').on('click', this.map_click_handler.bind(this));\n\n    // from https://bl.ocks.org/pkerpedjiev/cf791db09ebcabaec0669362f4df1776\n    d3.select('#map').call(\n      d3.zoom()\n      .scaleExtent([1, 4])\n      .translateExtent([[0, 0], [this.map.view.width, this.map.view.height]])\n      .on(\"zoom\", this.map_zoom.bind(this))\n    );\n\n    this.road_text_div = document.getElementById(\"road_text\");\n\n    this.ticks = 0; // here?\n    this.fps_div = document.getElementById('fps_counter');\n    this.map.ticker.add(() => {\n      this.ticks++;\n      if (this.ticks % 10 == 0) {\n        d3.select('#fps_counter').html(this.map.ticker.FPS | 0);\n      }\n    });\n    this.update_map_scale();    \n  }\n\n\n  change_state(state) {\n    this.state = state;\n    if (state == 'initial') {\n      d3.select('#road_text').html('');\n      this.road_start_cell = null;\n    } else if (state == 'build_road_choose_start') {\n      d3.select('#road_text').html('click road start cell');\n      this.road_start_cell = null;\n    } else if (state == 'build_road_choose_finish') {\n      d3.select('#road_text').html('click road finish cell');\n    } else if (state == 'build_road') {\n      //this.game.build_road(this.road_start_cell, this.road_finish_cell);\n      console.log('suppose the road is built now');\n      this.change_state('initial');\n    }\n  }\n\n\n  //\n  //  user actions handlers\n  //\n  build_road_button_handler(args) {\n    this.change_state('build_road_choose_start');\n  }\n\n  map_mouse_move_handler(event) {\n    if (event.target != this.map.view) {\n      this.game.map_drawer.clear_cell_under_cursor();\n      this.cell_under_cursor = null;\n      return false;\n    }\n    let mouse_coords = this.get_mouse_coords(event);\n    // TODO check if its fast enought\n    let cell = this.get_cell_under_cursor(mouse_coords);\n    if (!this.cell_under_cursor || this.cell_under_cursor != cell) {\n      this.game.map_drawer.highlight_cell_under_cursor(cell)\n      this.cell_under_cursor = cell;\n    }\n    \n    d3.select('#mouse_pos').html('{x: '+mouse_coords.x+', y: '+mouse_coords.y+'}');\n    let world_pos = this.mouse_coords_to_world_coords(mouse_coords);\n    d3.select('#world_pos').html('{x: '+world_pos.x+', y: '+world_pos.y+'}');\n  }\n\n  map_click_handler() {\n    let mouse_coords = this.get_mouse_coords(d3.event);\n    let cell = this.get_cell_under_cursor(mouse_coords);\n    if (!cell) {\n      console.log('dunno why, but no cell under cursor');\n      return false;\n    }\n    console.log('mouse click cell under cursor', cell);\n    if (this.state == 'build_road_choose_start') {\n      this.road_start_cell = cell;\n      this.change_state('build_road_choose_finish');\n    } else if (this.state == 'click road finish cell') {\n      this.road_finish_cell = cell;\n      this.change_state('build_road');\n    }\n  }\n\n  map_zoom() {\n    this.map.stage.position.x = d3.event.transform.x;\n    this.map.stage.position.y = d3.event.transform.y;\n    this.map.stage.scale.x = d3.event.transform.k;\n    this.map.stage.scale.y = d3.event.transform.k;\n    this.update_map_scale();\n  }\n  ///////////////////////////////////////\n\n\n  update_map_scale() {\n    d3.select('#map_scale').html('{x: '+this.map.stage.scale.x+', y: '+this.map.stage.scale.y+'}');\n  }\n\n\n  ///////////////////////////////////////  \n  // UTILS\n  ///////////////////////////////////////\n  get_mouse_coords(event) {\n    return {x: event.offsetX, y: event.offsetY};\n  }\n\n  get_cell_under_cursor(mouse_coords) {\n    let world_coords = this.mouse_coords_to_world_coords(mouse_coords);\n    return VoronoiDiagram.find(world_coords, this.game.map_drawer.diagram);\n  }\n\n\n  mouse_coords_to_world_coords(mouse_coords) {\n    let xn = Math.floor((mouse_coords.x - this.map.stage.position.x) / this.map.stage.scale.x),\n        yn = Math.floor((mouse_coords.y - this.map.stage.position.y) / this.map.stage.scale.y);\n    return {x: xn, y: yn};\n  }\n}\n","\nimport Util from \"common/util\";\nimport RRTDiagram from \"geo/rrt_diagram\";\nimport TextureGenerator from \"geo/texture_generator\";\nimport BallsGenerator from \"geo/balls_generator\";\nimport Color from \"common/color\";\n\nexport default class MapDrawer {\n  static layers() {\n    // edges -- test for rivers by edges\n    return [\n      // cells filling\n      'regions', 'geo', 'heights', 'dim_cells',\n      // all items, objects, all that 'upon' the ground\n      'borders', 'water', 'rrt_links', 'arrows', 'edges', 'roads', 'errors',\n      // interaction routines\n      'selection', 'under_cursor',\n      // other\n      'dim'\n    ];\n  }\n\n  init(diagram, rrt, width, height) {\n    let PIXI = require('pixi.js');\n    this.map = new PIXI.Application(width, height, {\n      backgroundColor : Color.to_pixi([0, 0, 0]),\n      antialias: true,\n      view: document.getElementById('map'),\n    });\n    console.log('renderer', this.map.renderer);\n    this.layers = {};\n    MapDrawer.layers().forEach(layer => {\n      this.layers[layer] = new PIXI.Container();\n      this.map.stage.addChild(this.layers[layer]);\n    });\n    document.getElementById('map_container').appendChild(this.map.view);\n    this.diagram = diagram;\n    this.rrt = rrt;\n  }\n\n  \n  draw() {\n    this.draw_voronoi_diagram = true;\n    this.draw_rrt_links = true;\n    this.draw_arrows = false;\n    this.draw_height = false;\n    this.draw_rivers = true;\n    this.draw_geo_types = true;\n    this.dark_mode = false; // DEBUG MODE\n    let water_color = [0, 50, 200];\n\n    this.init_heignts();\n    this.init_geo_types();\n    this.init_arrows();\n    this.init_rrt();\n    this.init_rivers(water_color);\n    \n    let rg = new PIXI.Graphics();\n    this.layers['water'].addChild(rg);\n    this.diagram.cells.forEach(cell => {\n      if (cell.geo_type == 'lake') {\n        MapDrawer.draw_smoothed_polygon(rg, cell.nodes, cell, water_color);\n      }\n    });\n    this.init_dark_mode();\n    \n    this.set_layers_visibility();\n  }\n  \n  set_layers_visibility() {\n    this.layers['heights'].visible = this.draw_height;\n    this.layers['geo'].visible = this.draw_geo_types;\n    this.layers['arrows'].visible = this.draw_arrows;\n    this.layers['rrt_links'].visible = this.draw_rrt_links;\n    this.layers['water'].visible = this.draw_rivers;\n    if (!this.draw_voronoi_diagram) {\n      this.layers['regions'].visible = false;\n      this.layers['geo'].visible = false;\n      this.layers['heights'].visible = false;\n    }\n    this.layers['dim_cells'].visible = this.dark_mode;\n    this.layers['dim'].visible = this.dark_mode;\n  }\n\n\n\n  clear_cell_under_cursor() {\n    this.layers['under_cursor'].removeChildren();\n  }\n\n  highlight_cell_under_cursor(cell) {\n    this.clear_cell_under_cursor();\n    let polygon = cell.nodes.map(node => new PIXI.Point(node.x, node.y));\n    let border_graphics = new PIXI.Graphics();\n    border_graphics.alpha = 0.75;\n    border_graphics.lineStyle(3, Color.to_pixi([218,165,32]));\n    border_graphics.drawPolygon(polygon);\n    border_graphics.closePath(); // strange, but it needed here. some edges are thin without it\n    let inner_graphics = new PIXI.Graphics();\n    inner_graphics.alpha = 0.35;\n    inner_graphics.beginFill(Color.to_pixi([255, 255, 255]));\n    inner_graphics.drawPolygon(polygon);\n    inner_graphics.closePath(); // strange, but it needed here. some edges are thin without it\n    inner_graphics.endFill();\n    \n    this.layers['under_cursor'].addChild(border_graphics);\n    this.layers['under_cursor'].addChild(inner_graphics);\n  }\n\n\n  init_rivers(water_color, draw_arrows = false) {\n    let graphics = new PIXI.Graphics();\n    let graphics_arrows = new PIXI.Graphics();\n    graphics_arrows.alpha = 0.5;\n    this.diagram.nodes.forEach(node => {\n      if (!node.river) return;\n      if (node.river.strength === 0) {\n        //let dry_river_color = [121, 96, 76];\n        let dry_river_color = [87, 65, 47];\n        graphics.lineStyle(2, Color.to_pixi(dry_river_color));\n      } else {\n        graphics.lineStyle(MapDrawer.get_line_width_for_river(node.river.strength), Color.to_pixi(water_color));\n      }\n      node.river.children.forEach(child => {\n        graphics.moveTo(node.x, node.y);\n        graphics.lineTo(child.x, child.y);\n        graphics.closePath();\n        MapDrawer.draw_arrow(node, child, graphics_arrows, 1, [200, 100, 0]);\n      });\n    });\n    this.layers['water'].addChild(graphics);\n    if (draw_arrows) this.layers['water'].addChild(graphics_arrows);\n  }\n\n  static get_line_width_for_river(strength) {\n    return 0.5 + Math.log(strength);\n  }\n\n  highlight_bad_river_links() {\n    let graphics = new PIXI.Graphics();\n    graphics.alpha = 0.5;\n    this.diagram.nodes.forEach(node => {\n      if (!node.river) return;\n      node.river.children.forEach(child => {\n        if (child.height > node.height) {\n          console.log('river flows up', child.height, node.height);\n          graphics.lineStyle(MapDrawer.get_line_width_for_river(node.river.strength), Color.to_pixi([200, 50, 0]));\n          graphics.moveTo(node.x, node.y);\n          graphics.lineTo(child.x, child.y);\n          graphics.closePath();\n        }\n      });\n    });\n\n    this.layers['water'].addChild(graphics);\n  }\n\n  highlight_local_minimums() {\n    this.diagram.cells.forEach(cell => {\n      if (cell.geo_type == 'sea') return;\n      if (cell.links.every(link => link.height > cell.height)) {\n        let graphics = MapDrawer.draw_polygon(cell.nodes, [255, 0, 125]);\n        graphics.alpha = 0.5;\n        this.layers['errors'].addChild(graphics);\n        console.log('inland local minimum', cell.x, cell.y);\n      }\n    })\n  }\n\n\n\n  print_text_for_each_cell(fn) {\n    this.diagram.cells.forEach(cell => {\n      let msg = fn(cell);\n      let text = new PIXI.Text(msg, {fontFamily : 'Arial', fontSize: 10, fill : 0xff1010});\n      text.x = cell.x + 2;\n      text.y = cell.y;\n      this.layers['errors'].addChild(text);\n    });\n  }  \n\n  highlight_deleted_links(deleted_links) {\n    let graphics = new PIXI.Graphics();\n    deleted_links.forEach(([from, to]) => {\n      graphics.lineStyle(2, Color.to_pixi([250, 125, 0]));\n      graphics.moveTo(from.x, from.y);\n      graphics.lineTo(to.x, to.y);\n      graphics.closePath();\n    });\n    this.layers['errors'].addChild(graphics);\n  }\n\n\n\n\n\n\n  init_heignts() {\n    let min_height = this.diagram.cells[0].height,\n        max_height = this.diagram.cells[0].height;\n    this.diagram.cells.forEach(cell => {\n      if (cell.height < min_height) min_height = cell.height;\n      if (cell.height > max_height) max_height = cell.height;\n    });\n    this.diagram.cells.forEach(cell => {\n      let c = Util.normalize_value(cell.height, max_height, 255, min_height, 0);\n      let graphics = MapDrawer.draw_polygon(cell.nodes, [0, c, 0]);\n      this.layers['heights'].addChild(graphics); // z-index?\n    });\n  }\n\n  init_geo_types() {    \n    let geo_types_colors = {\n      sea: [0, 50, 100],\n      rock: [60, 60, 50],\n      //ITS A HACK! its only a background, we draw lake lower with c draw_smoothed_polygon() and blue color\n      lake: [0, 150, 0],\n      bog: [50, 100, 0],\n      grass: [0, 150, 0],\n      steppe: [150, 150, 0],\n      desert: [200, 150, 0],\n    };\n    this.diagram.cells.forEach(cell => {\n      if (!geo_types_colors[cell.geo_type]) {\n        throw('no geo_type color for '.cell.geo_type);\n      }\n      let fill_color = geo_types_colors[cell.geo_type];\n      let graphics = MapDrawer.draw_polygon(cell.nodes, fill_color);\n      this.layers['geo'].addChild(graphics);\n    });\n\n    //let balls_generator = new BallsGenerator(this.diagram, geo_types_colors, this);\n    //balls_generator.generate();\n    /*\n    let container = new PIXI.Graphics();\n    let texture_generator = new TextureGenerator();\n    let geo_types_textures = {\n      sea: texture_generator.simple([0, 50, 100]),\n      rock: texture_generator.simple([60, 60, 50]),\n      //ITS A HACK! its only a background, we draw lake lower with c draw_smoothed_polygon() and blue color\n      lake: texture_generator.simple([0, 150, 0]),\n      bog: texture_generator.simple([50, 100, 0]),\n      grass: texture_generator.simple([0, 150, 0]),\n      steppe: texture_generator.simple([150, 150, 0]),\n      desert: texture_generator.simple([200, 150, 0]),\n    };\n    \n    this.diagram.cells.forEach(cell => {\n      if (!geo_types_textures[cell.geo_type]) {\n        throw('no geo_type color for '.cell.geo_type);\n      }\n      let graphics = new PIXI.Graphics();\n      graphics.beginFill(0);\n      graphics.drawPolygon(cell.nodes.map(node => new PIXI.Point(node.x, node.y)));\n      graphics.endFill();\n\n      let xc = Util.find_min_and_max(cell.nodes, e => e.x);\n      let yc = Util.find_min_and_max(cell.nodes, e => e.y);\n      let sprite = new PIXI.extras.TilingSprite(geo_types_textures[cell.geo_type], xc.max - xc.min, yc.max - yc.min);\n      sprite.x = xc.min;\n      sprite.y = yc.min;\n      sprite.mask = graphics;\n      container.addChild(sprite);\n    });\n    let final_texture = container.generateCanvasTexture(PIXI.SCALE_MODES.NEAREST);\n    let final_sprite = new PIXI.Sprite(final_texture);\n    this.layers['geo'].addChild(final_sprite);\n    */\n  }\n\n  init_arrows() {\n    let graphics = new PIXI.Graphics();\n    this.layers['arrows'].addChild(graphics);\n    this.diagram.cells.forEach(cell => MapDrawer.draw_arrow(cell, cell.closest_link, graphics, 3, [50, 50, 0]));\n  }\n\n  init_rrt() {\n    let color = ([0, 125, 255]).sort((e1, e2) => 0.5 - Math.random());\n    let graphics = new PIXI.Graphics();\n    this.layers['rrt_links'].addChild(graphics);\n    let bla = Util.find_min_and_max(this.rrt.nodes, (e) => e.height);\n\n    // TODO add diff colors for isolated graphs, use Utildo_while_not_empty() for that\n    this.diagram.cells.forEach(cell => {\n      graphics.lineStyle(0, Color.to_pixi([0, 0, 0]));\n      let color_by_height = [\n        Util.normalize_value(cell.height, bla.max, color[0], bla.min, 25),\n        Util.normalize_value(cell.height, bla.max, color[1], bla.min, 25),\n        Util.normalize_value(cell.height, bla.max, color[2], bla.min, 25)\n      ];\n      graphics.beginFill(Color.to_pixi(color_by_height));\n      graphics.drawCircle(cell.x, cell.y, 4);\n      graphics.endFill();\n      // all links are drawen twice, but i dont care!\n      cell.rrt_links.forEach(link => {\n        graphics.lineStyle(3, Color.to_pixi(color_by_height));\n        graphics.moveTo(cell.x, cell.y);\n        graphics.lineTo(link.x, link.y);\n      });\n    });\n  }\n\n  init_dark_mode() {\n    this.diagram.cells.forEach(cell => {\n      let color = cell.geo_type == 'sea' || cell.geo_type == 'lake' ? [0, 0, 100] : [0, 0, 0];\n      let graphics = MapDrawer.draw_polygon(cell.nodes, color);\n      this.layers['dim_cells'].addChild(graphics); // z-index?\n    });\n    let g = new PIXI.Graphics();\n    this.layers['dim'].addChild(g);\n    g.alpha = 0.75;\n    g.beginFill = Color.to_pixi([0, 0, 0]);\n    g.drawRect(0, 0, this.map.view.width, this.map.view.height);\n    g.endFill();\n  }\n\n\n  static draw_polygon(polygon, fill_color) {\n    let graphics = new PIXI.Graphics();\n    graphics.lineStyle(1, Color.to_pixi([0, 30, 0]));\n    graphics.beginFill(Color.to_pixi(fill_color));\n    graphics.drawPolygon(polygon.map(node => new PIXI.Point(node.x, node.y)));\n    graphics.closePath(); // strange, but it needed here. some edges are thin without it\n    graphics.endFill();\n    return graphics;\n  }\n\n  // TODO\n  static draw_arrow(from, to, graphics, line_width, color) {\n    graphics.lineStyle(line_width, Color.to_pixi(color));\n    graphics.moveTo(from.x, from.y);\n    graphics.lineTo(to.x, to.y);\n    graphics.closePath();\n\n    let angle = Util.to_polar_coords(from.x - to.x, from.y - to.y).angle;\n    let p1 = Util.from_polar_coords(angle - Util.radians(15), 7*line_width);\n    let p2 = Util.from_polar_coords(angle + Util.radians(15), 7*line_width);\n    graphics.beginFill(Color.to_pixi(color));\n    graphics.moveTo(p1.x + to.x, p1.y + to.y);\n    graphics.lineTo(to.x, to.y);\n    graphics.lineTo(p2.x + to.x, p2.y + to.y);\n    graphics.closePath();\n    graphics.endFill();\n  }\n\n\n  static draw_smoothed_polygon(graphics, polygon, center, water_color) {\n    polygon = polygon.map(node => Util.move_by_vector(node, center, Util.rand_float(0.1, 0.3)));\n    let mid_radius = polygon.reduce((sum, e) => sum + Util.distance(e, center), 0)/polygon.length;\n    polygon = polygon.filter((node, i) => {\n      let next_i = (i + 1 == polygon.length) ? 0 : i + 1;\n      let next_node = polygon[next_i];\n      return Util.distance(node, next_node) >= 0.2*mid_radius;\n    });\n\n    graphics.beginFill(Color.to_pixi(water_color));\n    let fl_mid = {x: (polygon[0].x + Util.last(polygon).x)/2, y: (polygon[0].y + Util.last(polygon).y)/2};\n    graphics.moveTo(fl_mid.x, fl_mid.y);\n    Util.for_all_consecutive_pairs(polygon, (cur, next) => {\n      let pc_mid = {x: (next.x + cur.x)/2, y: (next.y + cur.y)/2};\n      graphics.quadraticCurveTo(cur.x, cur.y, pc_mid.x, pc_mid.y);\n    });\n    graphics.endFill();\n  }\n\n\n  static draw_broken_line_between_two_cells(c1, c2, graphics, diagram, color, width = 1) {\n    let mid_point = MapDrawer.two_cells_edge_midpoint(diagram, c1, c2);\n    graphics.lineStyle(width, Color.to_pixi(color));\n    graphics.moveTo(c1.x, c1.y);\n    graphics.lineTo(mid_point.x, mid_point.y);\n    graphics.moveTo(mid_point.x, mid_point.y);\n    graphics.lineTo(c2.x, c2.y);\n  }\n\n\n  static two_cells_edge_midpoint(diagram, c1, c2) {\n    let my_edge;\n    for (let i in c2.halfedges) {\n      let edge = diagram.edges[c2.halfedges[i]];\n      if (edge.left == c1 || edge.right == c1) {\n        my_edge = edge;\n        break;\n      }\n    }\n    if (!my_edge) {\n      console.log('two_cells_edge_midpoint not linked cells', c1, c2);\n      throw('two_cells_edge_midpoint not linked cells');\n    }\n    return {x: (my_edge.from.x + my_edge.to.x)/2, y: (my_edge.from.y + my_edge.to.y)/2};\n  }\n}\n","import Util from \"common/util\";\n\nexport default class RegionsGatherer {\n  static gather_regions(diagram) {\n    let regions_mode = 'rrt_leafs'; // 'closest'\n    const regions_min_cells = 5;\n    //const regions_opt_cells = 15; // kinda optimum, not max\n\n    // gather regions\n    diagram.regions = [];\n    if (regions_mode == 'rrt_leafs') {\n      let starters = diagram.cells.filter(cell => cell.rrt_links.length != 2);\n      starters.forEach(cell => {\n        let region = {color: MapDrawer.random_color(), cells: [cell]};\n        diagram.regions.push(region);\n        cell.region = region;\n      });\n      starters.forEach(cell => RegionsGatherer.gather_all_parents_to_my_region(cell));\n      RegionsGatherer.recursively_merge_small_regions(diagram);\n      diagram.regions.forEach((region, i) => region.index = i);\n    } else {\n      let get_linked_cells_func;\n      if (regions_mode == 'closest') {\n        get_linked_cells_func = (cell) => cell.closest_backlinks.concat([cell.closest_link]);\n      } else if (regions_mode == 'rrt') {\n        get_linked_cells_func = (cell) => cell.rrt_links;\n      } else if (regions_mode == 'rrt_generations') {\n        let generations_per_regions = 5;\n        get_linked_cells_func = (cell) => {\n          let my_region_index = Math.floor(cell.generation/generations_per_regions);\n          return cell.rrt_links.filter(link => Math.floor(link.generation/generations_per_regions) == my_region_index);\n        };\n      } else {\n        throw(\"unknown regions_mode: \" + regions_mode);\n      }\n      diagram.cells.forEach(cell => RegionsGatherer.diagram_collect_regions(diagram, cell, get_linked_cells_func));\n    }\n\n    // after set cells on_border prop\n    diagram.regions.forEach(region => {\n      region.on_border = false;\n      for (let i = 0; i < region.cells.length; i++) {\n        if (region.cells[i].on_border) {\n          region.on_border = true;\n          break;\n        }\n      }\n    });\n  }\n\n\n\n  static diagram_collect_regions(diagram, cell, get_linked_cells_func) {\n    if (cell.region) {\n      return;\n    }\n    let linked_cells = get_linked_cells_func(cell); // cell.closest_backlinks.concat([cell.closest_link]);\n    let region;\n    for (let i = 0; i < linked_cells.length; i++) {\n      if (linked_cells[i].region) {\n        region = linked_cells[i].region;\n        break;\n      }\n    }\n    if (!region) {\n      region = {color: MapDrawer.random_color(), index: diagram.regions.length, cells: []};\n      diagram.regions.push(region);\n    }\n    cell.region = region; // index?\n    region.cells.push(cell); // wont be dublicates???\n\n    linked_cells.forEach(link => diagram_collect_regions(diagram, cell, get_linked_cells_func));\n  }\n\n\n\n\n  static gather_all_parents_to_my_region(cell) {\n    let parent = RRTDiagram.get_parent(cell);\n    if (!parent || parent.region) {\n      return;\n    }\n    parent.region = cell.region;\n    cell.region.cells.push(parent);\n    return RegionsGatherer.gather_all_parents_to_my_region(parent);\n  }\n\n  static rrt_leafs_move_all_cells_from_region_to_another_and_delete_it(from, to, diagram) {\n    from.cells.forEach(cell => {\n      cell.region = to;\n      to.cells.push(cell);\n    });\n    from.cells.splice(0, from.cells.length);\n    Util.remove_element(from, diagram.regions);\n  }\n\n\n  static recursively_merge_small_regions(diagram) {\n    let small_regions = diagram.regions.filter(region => region.cells.length < regions_min_cells);\n    if (!small_regions.length) {\n      return;\n    }\n    // smallest first. actually, we need only first one\n    let region = RegionsGatherer.sort_regions_by_size(small_regions)[0]; //small_regions.shift();\n    let linked_regions = RegionsGatherer.gather_all_linked_regions(region);\n    RegionsGatherer.sort_regions_by_size(linked_regions);\n    let target_region = linked_regions[0];\n    /*if (target_region.cells.length > regions_opt_cells) {\n      console.log('too bad merge with big one, size '+region.cells.length+' with size '+target_region.cells.length);\n    }*/\n    RegionsGatherer.rrt_leafs_move_all_cells_from_region_to_another_and_delete_it(region, target_region, diagram);\n    RegionsGatherer.recursively_merge_small_regions(diagram);\n  }\n\n  static gather_all_linked_regions(region) {\n    let linked_regions = [];\n    region.cells.forEach(cell => {\n      cell.rrt_links.forEach(link => { if (link.region && link.region != region) Util.push_uniq(link.region, linked_regions) });\n    });\n    return linked_regions;\n  }\n\n  static sort_regions_by_size(regions) {\n    return regions.sort((e1, e2) => e1.cells.length - e2.cells.length);\n  }\n}\n","import Util from \"common/util\";\nimport RRTDiagram from \"geo/rrt_diagram\";\nimport MapDrawer from \"geo/map_drawer\";\n\n\n/**\n *  generates rivers on graph\n */\nexport default class RiversAndLakesGenerator {\n  static generate_by_edges(diagram, dry_factor = 0.5) {\n    // only edges between non-linked rrt nodes\n    let edges = diagram.edges.filter(edge => {\n      if (!edge.right) return false;\n      let rrt_linked = RRTDiagram.check_linked(edge.right, edge.left);\n      let sea_side = edge.right.geo_type == 'sea' || edge.left.geo_type == 'sea';\n      return !rrt_linked && !sea_side;\n    });\n    // gather river nodes and links between them\n    let nodes = [], river_roots = [], river_ends = [];\n    // here we only gather links between nodes, nothing more\n    edges.forEach(edge => {\n      Util.for_all_consecutive_pairs([edge.from, edge.to], (node, link) => {\n        Util.push_uniq(node, nodes);\n        if (!node.river_links) node.river_links = [];\n        Util.push_uniq(link, node.river_links);\n      });\n    });\n    // here we create rivers from river root nodes, add them to closed list, all others go to open list\n    nodes.forEach(node => {\n      node.river = {\n        strength: 0,\n        parents: [],\n        children: [],\n      };\n      if (node.on_border) {\n        river_ends.push(node);\n      } else if (node.cells.some(cell => cell.geo_type == 'sea')) {\n        river_ends.push(node);\n      } else if (node.river_links.length == 1) {\n        node.river.strength = Math.random() > dry_factor ? Util.rand(1, 10) : 0,\n        river_roots.push(node);\n      } else {\n      }\n    });\n\n    river_ends.forEach(node => {\n      RiversAndLakesGenerator.recursively_walk_from_ends(node, null);\n    });\n\n    river_roots.forEach(node => RiversAndLakesGenerator.recursively_add_strength(node, node.river.strength));\n\n    // here we only delete temporary river_links prop!\n    nodes.forEach(node => delete(node.river_links));\n\n    return true;\n  }\n\n\n  static recursively_walk_from_ends(node, from) {\n    if (from) {\n      Util.remove_element(node, from.river.children);\n      from.river.parents.push(node);\n      Util.remove_element(from, node.river.parents);\n      node.river.children.push(from);\n    }\n    let all_but_from = node.river_links.filter(l => l != from);\n    if (all_but_from.length > 1 && all_but_from.every(link => link.river.children.length)) {\n      return;\n    }\n    all_but_from.forEach(link => {\n      RiversAndLakesGenerator.recursively_walk_from_ends(link, node);\n    });\n  }\n\n  static recursively_add_strength(node, strength) {\n    node.river.children.forEach(child => {\n      child.river.strength += strength;\n      RiversAndLakesGenerator.recursively_add_strength(child, strength);\n    });\n  }\n}\n","import Util from \"common/util\";\n\nclass RRTNode {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n    this.rrt_links = [];\n    this.generation = null;\n    this.branch_order = null;\n  }\n}\n\n\nexport default class RRTDiagram {\n  constructor(x_size, y_size) {\n    this.nodes = [];\n    this.x_size = x_size;\n    this.y_size = y_size;\n  }\n\n  get_generation(generation) {\n    return this.nodes.filter(node => node.generation == generation);\n  }\n\n  generations_count() {\n    return Util.find_min_and_max(this.nodes, node => node.generation).max;\n  }\n\n  static check_linked(n1, n2) {\n    return n1.rrt_links.indexOf(n2) != -1;\n  }\n\n  // TODO\n  generate(epsilon, count = Infinity, reject_limit = 500) {\n    this.epsilon = epsilon; // for rrt_links rebuild\n    this.nodes.push(new RRTNode(Util.rand(1, this.x_size - 1), Util.rand(1, this.y_size - 1)));\n    if (count < 0) {\n      throw('bad number of nodes given: '+count);\n    }\n    let reject_counter = 0;\n\n    while(count && reject_counter < reject_limit) {\n      let random = {x: Util.rand(1, this.x_size-1), y: Util.rand(1, this.y_size-1)},\n          nearest = RRTDiagram.find_nearest_node(random, this.nodes),\n          // we calc distance second time, but i dont care...\n          distance = RRTDiagram.distance(random, nearest);\n      // distance === 0 -- if we choosed existing point\n      if (distance < epsilon * epsilon || distance === 0) {\n        reject_counter++;\n        continue;\n      }\n      let theta = Math.atan2(random.y - nearest.y, random.x - nearest.x);\n      let node = new RRTNode(\n        Math.round(nearest.x + epsilon * Math.cos(theta)),\n        Math.round(nearest.y + epsilon * Math.sin(theta)),\n      );\n      this.nodes.push(node);\n      RRTDiagram.link_two_nodes(node, nearest);\n      reject_counter = 0;\n      count--;\n    }\n    this.calc_branches_length_and_generations();\n  }\n\n\n  // TODO move it to Util?\n  static find_nearest_node(target, nodes) {\n    if (!nodes[0]) {\n      throw('no nodes');\n    }\n    let nearest = nodes[0],\n        nearestDistance = RRTDiagram.distance(target, nearest);\n    for (let i in nodes) {\n      let d = RRTDiagram.distance(nodes[i], target);\n      if (d < nearestDistance) {\n        nearest = nodes[i];\n        nearestDistance = d;\n      }\n    }\n    return nearest;\n  }\n\n  // PRIVATE\n  static link_two_nodes(n1, n2) {\n    Util.push_uniq(n1, n2.rrt_links);\n    Util.push_uniq(n2, n1.rrt_links);\n  }\n\n  // PRIVATE\n  static delink_two_nodes(n1, n2) {\n    Util.remove_element(n1, n2.rrt_links);\n    Util.remove_element(n2, n1.rrt_links);\n  }\n\n\n  static get_parent(node) {\n    let ret = node.rrt_links.filter(n => n.generation < node.generation);\n    if (!ret.length) return null; // historically it is null\n    if (ret.length != 1) {\n      console.log('more than one parent', node);\n      throw('more than one parent');\n    }\n    return ret[0];\n  }\n\n\n  // PRIVATE\n  static distance(a, b) {\n    let dx = a.x - b.x,\n        dy = a.y - b.y;\n    return dx * dx + dy * dy;\n  }\n\n\n  remove_some_links_and_recalc_all(count, min, max) {\n    let nodes_to_process = this.nodes.filter(node => node.branch_order >= min && node.branch_order <= max);\n    if (nodes_to_process.length < count) {\n      throw('cant remove_some_links_and_recalc_all() count '+count+' cause only '+nodes_to_process.length+' sutable nodes');\n    }\n    nodes_to_process.sort(() => .5 - Math.random());\n    let deleted_links = [];\n    for (let i = 0; i < count; i++) {\n      let from = nodes_to_process[i];\n      let to = from.rrt_links.find(link => link.branch_order >= min - 1 && link.branch_order <= max + 1);\n      if (!to) {\n        throw('strange, not found sutable link');\n      }\n      RRTDiagram.delink_two_nodes(from, to);\n      deleted_links.push([from, to]);\n    }\n    this.calc_branches_length_and_generations();\n    return deleted_links;\n  }\n\n  restore_removed_links(deleted_links) {\n    deleted_links.forEach(([from, to]) => RRTDiagram.link_two_nodes(from, to));\n    this.calc_branches_length_and_generations();\n  }\n\n\n  calc_branches_length_and_generations() {\n    // reset all prev values\n    this.nodes.forEach(node => {\n      node.generation = null;\n      node.branch_order = null;\n      node.longest_branch = null;\n    });\n\n    this.nodes.forEach(node => {\n      node.branch_length = 0;\n      this.recursively_set_branch_length(node);\n      node.longest_branch = Util.find_min_and_max(this.nodes, e => e.branch_length).max;\n      this.nodes.forEach(e => delete(e.branch_length));\n    });\n\n    // we choose local minimum nodes (by longest_branch) and they would be our diagram's \"centers\"\n    let centers = [];\n    this.nodes.forEach(node => {\n      let local_minimum = node.rrt_links.every(link => link.longest_branch >= node.longest_branch);\n      let no_center_nearby = node.rrt_links.every(link => centers.indexOf(link) == -1);\n      if (local_minimum && no_center_nearby) centers.push(node);\n    });\n    // and write path length from it to each node\n    this.nodes.forEach(node => node.generation = null);\n    centers.forEach(center => {\n      center.generation = 0;\n      this.recursively_set_generation(center);\n    });\n    // calc branch_order ONLY after calc generations\n    // FIXME sometimes diff between center and some near node is 2\n    let leaf_nodes = this.nodes.filter(node => node.rrt_links.length == 1);\n    leaf_nodes.forEach(node => {\n      node.branch_order = 0;\n      this.recursively_calc_branch_order(node);\n    });\n  }\n\n\n  recursively_set_generation(node) {\n    let filtered = node.rrt_links.filter(link => link.generation == null);\n    // we set link.generation and add them to closed list\n    filtered.forEach(link => link.generation = node.generation + 1);\n    // and AFTER we call recursively_set_generation on it!\n    filtered.forEach(link => this.recursively_set_generation(link));\n  }\n\n  // TODO too bad its absolutely like recursively_set_generation()\n  recursively_set_branch_length(node) {\n    let filtered = node.rrt_links.filter(link => link.branch_length == null);\n    filtered.forEach(link => link.branch_length = node.branch_length + 1);\n    filtered.forEach(link => this.recursively_set_branch_length(link));\n  }\n\n\n  recursively_calc_branch_order(node) {\n    // link.generation != 0 -- diagram 'center' nodes work like 'stops'\n    let filtered = node.rrt_links.filter(link => {\n      let parent = link.generation < node.generation;\n      let lesser_branch_order = link.branch_order == null || link.branch_order < node.branch_order + 1;\n      return parent && lesser_branch_order;\n    });\n    if (filtered.length > 1) {\n      throw('seens like several parents');\n    }\n    filtered.forEach(link => link.branch_order = node.branch_order + 1);\n    filtered.forEach(link => this.recursively_calc_branch_order(link));\n  }\n}\n\n","import Util from \"common/util\";\nimport Color from \"common/color\";\n\nexport default class TextureGenerator {\n\n  simple(base) {\n    return this.generate(base, 400, 2);\n  }\n\n  generate(base, tiles_count, tile_size) {\n    let graphics = new PIXI.Graphics();\n    for (let y = 0; y < tiles_count; y++) {\n      for (let x = 0; x < tiles_count; x++) {\n        graphics.beginFill(Color.to_pixi(Color.random_near(base)));\n        graphics.drawRect(tile_size*x, tile_size*y, tile_size, tile_size);\n        graphics.endFill();\n      }\n    }\n    let texture = graphics.generateCanvasTexture(PIXI.SCALE_MODES.NEAREST, 1);\n    return texture;\n  }\n}\n","import CollapsiblePanel from 'common/components/collapsible_panel';\nimport DebugInfo from 'planets/components/debug_info';\nimport GenerateWorldForm from 'planets/components/generate_world_form';\nimport React from 'react';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <table style={{margin: '5px', borderSpacing: '5px', borderCollapse: 'separate'}}>\n      <tbody>\n        <tr style={{verticalAlign: 'top'}}>\n          <td>\n\n            <div className=\"panel-group\">\n              <div className=\"panel panel-success\">\n                <div className=\"panel-body\">\n                  <div className=\"\" id=\"map_container\">\n                    <canvas id='map' width='800' height='800'></canvas>\n                  </div>\n                </div>\n              </div>\n              <CollapsiblePanel header=\"debug\" name=\"debug\" content_func={() => React.createElement(DebugInfo)} />\n            </div>\n\n          </td>\n          <td width=\"100%\">\n\n            <div className=\"panel-group\">\n              <div className=\"panel panel-success\">\n                <div className=\"panel-body\">\n                  <CollapsiblePanel header=\"world generating\" name=\"generate_world\" content_func={() => React.createElement(GenerateWorldForm)} />\n                </div>\n                <div className=\"panel-footer\">\n                  \n                </div>\n              </div>\n            </div>\n\n          </td>\n        </tr>\n      </tbody>\n      </table>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class DebugInfo extends React.Component {\n  render() {\n    return (\n      <div>\n        <div>FPS: <span id=\"fps_counter\"></span></div>\n        <div>map scale: <span id=\"map_scale\"></span></div>\n        <div>mouse position: <span id=\"mouse_pos\">{0, 0}</span></div>\n        <div>world point: <span id=\"world_pos\">{0, 0}</span></div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport InputSpinner from 'common/components/input_spinner';\nimport {game} from \"planets/game\";\n\nexport default class GenerateWorldForm extends React.Component {\n\n  submit(e) {\n    e.preventDefault();\n    console.clear();\n    game.map_drawer.map.stage.children.forEach(layer => layer.removeChildren());\n    game.generate_world();\n  }\n\n  render() {\n    return (\n      <div>\n        <form className=\"form-horizontal\">\n          <div className=\"form-group\">\n            <div className=\"col-sm-offset-4 col-sm-8\">\n              <button type=\"button\" className=\"btn btn-default\" id=\"generate_world\" onClick={this.submit.bind(this)}>generate</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","\nimport Util from \"common/util\";\nimport StarSystem from \"planets/star_system\";\nimport Interaction from \"planets/interaction\";\nimport MapDrawer from \"planets/map_drawer\";\nimport App from 'planets/components/app';\nimport ReactDOM from 'react-dom';\nimport React from 'react';\n\nclass Game {\n  constructor() {\n    // CONST\n    this.width = 800;\n    this.height = 800;\n\n    this.map_drawer = new MapDrawer();\n    this.interaction = new Interaction();\n  }\n\n  generate_world() {\n    this.star_system = new StarSystem();\n    this.star_system.generate();\n\n    this.ticks = 0;\n    \n    this.map_drawer.init(this.width, this.height);\n    this.interaction.init();\n\n    this.map_drawer.map.ticker.add(this.handle_tick.bind(this));\n\n    this.map_drawer.init_graphics();\n  }\n\n  handle_tick() {\n    this.ticks++;\n    this.star_system.tick();\n    this.map_drawer.redraw();\n  }\n}\n\nlet game = new Game();\nmodule.exports.game = game;\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  ReactDOM.render(<App />, document.querySelector('#app'));\n  game.generate_world();\n});\n","import Util from \"common/util\";\nimport {game} from \"planets/game\";\nimport * as d3 from \"d3\";\n\nexport default class Interaction {\n  constructor() {\n    this.state = 'initial';\n  }\n\n  init() {\n    this.game = game;\n    this.map = this.game.map_drawer.map;\n    this.map.stage.interactive = true;\n\n    document.addEventListener('mousemove', this.map_mouse_move_handler.bind(this), false);\n\n    d3.select('#map').on('click', this.map_click_handler.bind(this));\n\n    // from https://bl.ocks.org/pkerpedjiev/cf791db09ebcabaec0669362f4df1776\n    d3.select('#map').call(\n      d3.zoom()\n      .scaleExtent([1, 4])\n      .translateExtent([[0, 0], [this.map.view.width, this.map.view.height]])\n      .on(\"zoom\", this.map_zoom.bind(this))\n    );\n\n    this.ticks = 0; // here?\n    this.fps_div = document.getElementById('fps_counter');\n    this.map.ticker.add(() => {\n      this.ticks++;\n      if (this.ticks % 10 == 0) {\n        d3.select('#fps_counter').html(this.map.ticker.FPS | 0);\n      }\n    });\n    this.update_map_scale();    \n  }\n\n\n\n  map_mouse_move_handler(event) {\n    if (event.target != this.map.view) {\n      //this.game.map_drawer.clear_cell_under_cursor();\n      //this.cell_under_cursor = null;\n      return false;\n    }\n    let mouse_coords = this.get_mouse_coords(event);\n    \n    d3.select('#mouse_pos').html('{x: '+mouse_coords.x+', y: '+mouse_coords.y+'}');\n    let world_pos = this.mouse_coords_to_world_coords(mouse_coords);\n    d3.select('#world_pos').html('{x: '+world_pos.x+', y: '+world_pos.y+'}');\n  }\n\n  map_click_handler() {\n    let mouse_coords = this.get_mouse_coords(d3.event);\n  }\n\n  map_zoom() {\n    this.map.stage.position.x = d3.event.transform.x;\n    this.map.stage.position.y = d3.event.transform.y;\n    this.map.stage.scale.x = d3.event.transform.k;\n    this.map.stage.scale.y = d3.event.transform.k;\n    this.update_map_scale();\n  }\n  ///////////////////////////////////////\n\n\n  update_map_scale() {\n    d3.select('#map_scale').html('{x: '+this.map.stage.scale.x+', y: '+this.map.stage.scale.y+'}');\n  }\n\n\n  ///////////////////////////////////////  \n  // UTILS\n  ///////////////////////////////////////\n  get_mouse_coords(event) {\n    return {x: event.offsetX, y: event.offsetY};\n  }\n\n  mouse_coords_to_world_coords(mouse_coords) {\n    let xn = Math.floor((mouse_coords.x - this.map.stage.position.x) / this.map.stage.scale.x),\n        yn = Math.floor((mouse_coords.y - this.map.stage.position.y) / this.map.stage.scale.y);\n    return {x: xn, y: yn};\n  }\n}\n","\nimport Util from \"common/util\";\nimport Color from \"common/color\";\nimport {game} from \"planets/game\";\n\nexport default class MapDrawer {\n  static layers() {\n    return [\n      'bodies',\n      'errors',\n      'test',\n    ];\n  }\n\n  init(width, height) {\n    let PIXI = require('pixi.js');\n    this.map = new PIXI.Application(width, height, {\n      backgroundColor : Color.to_pixi([0, 0, 0]),\n      antialias: true,\n      view: document.getElementById('map'),\n    });\n    console.log('renderer', this.map.renderer);\n\n    this.base_container = new PIXI.Container();\n    this.base_container.scale = {x: 6, y: 6};\n    this.map.stage.addChild(this.base_container);\n    this.base_container.position.x = width / 2 | 0;\n    this.base_container.position.y = height / 2 | 0;\n\n    this.layers = {};\n    MapDrawer.layers().forEach(layer => {\n      this.layers[layer] = new PIXI.Container();\n      this.base_container.addChild(this.layers[layer]);\n    });\n    document.getElementById('map_container').appendChild(this.map.view);\n    this.bodies_graphics = [];\n\n\n  }\n\n  clear_all() {\n    this.base_container.children.forEach(layer => layer.removeChildren());\n  }\n\n  init_graphics() {\n    this.init_stellar_body(game.star_system.star);\n    game.star_system.planets.forEach(planet => this.init_stellar_body(planet));\n  }\n\n  redraw() {\n    this.bodies_graphics.forEach(graphics => this.update_stellar_body(graphics));\n  }\n\n\n  init_stellar_body(stellar_body) {\n    let graphics = new PIXI.Graphics();\n    graphics.backlink = stellar_body;\n\n    let line_color = Color.to_pixi(Color.darker(stellar_body.color, 30));\n    graphics.lineStyle(stellar_body.radius / 10, line_color);\n    graphics.beginFill(Color.to_pixi(stellar_body.color));\n    graphics.drawCircle(0, 0, stellar_body.radius);\n    graphics.closePath();\n    graphics.endFill();\n\n    this.small_circle(graphics, 0, 1, stellar_body, line_color);\n    this.small_circle(graphics, 0, -1, stellar_body, line_color);\n    this.small_circle(graphics, 1, 0, stellar_body, line_color);\n    this.small_circle(graphics, -1, 0, stellar_body, line_color);\n\n    this.layers['bodies'].addChild(graphics);\n    this.bodies_graphics.push(graphics);\n    this.update_stellar_body(graphics);\n    //console.log('DI', coords, stellar_body.orbital_angle, stellar_body.orbital_radius);\n  }\n\n  update_stellar_body(graphics) {\n    let stellar_body = graphics.backlink;\n    let coords = Util.from_polar_coords(stellar_body.orbital_angle, stellar_body.orbital_radius);\n    //console.log('SF', coords);\n    graphics.position.x = coords.x;\n    graphics.position.y = coords.y;\n    graphics.rotation = stellar_body.angle;\n  }\n\n\n  small_circle(graphics, x, y, stellar_body, color) {\n    graphics.lineStyle(stellar_body.radius / 10, Color.to_pixi([0, 0, 0]));\n    graphics.beginFill(color);\n    graphics.drawCircle(x * (stellar_body.radius / 2), y * (stellar_body.radius / 2), stellar_body.radius / 3);\n    graphics.endFill();\n  }\n}\n","import Util from \"common/util\";\nimport {game} from \"planets/game\";\nimport StellarBody from \"planets/stellar_body\";\nimport Color from \"common/color\";\n\nexport default class StarSystem {\n  constructor() {\n    this.star = null;\n    this.planets = [];\n\n    this.orbital_speed_coef = 0.0025;\n    this.rotation_speed_coef = 0.01;\n  }\n\n  generate() {\n    this.star = new StellarBody();\n    this.star.radius = 8;\n    this.star.rotation_speed = this.rotation_speed_coef * Util.rand(1, 10);\n    this.star.color = Color.random_near([250, 50, 50]);\n\n    let count_planets = 5;\n    while (count_planets--) {\n      let planet = new StellarBody();\n      planet.orbital_radius = 10*(count_planets + 2);\n      planet.radius = Util.rand(1, 5);\n      planet.orbital_speed = this.orbital_speed_coef * Util.rand(1, 10);\n      planet.rotation_speed = this.rotation_speed_coef * Util.rand(1, 10);\n      planet.color = Color.random([200, 200, 200]);\n\n      this.planets.push(planet);\n    }\n  }\n\n  tick() {\n    this.update_stellar_body(this.star);\n    this.planets.forEach(planet => this.update_stellar_body(planet));\n  }\n\n  update_stellar_body(body) {\n    body.orbital_angle += body.orbital_speed;\n    body.angle += body.rotation_speed;\n  }\n}\n","import Util from \"common/util\";\nimport {game} from \"planets/game\";\n\nexport default class StellarBody {\n  constructor() {\n    this.orbital_radius = 0;\n    this.radius = 0;\n    this.orbital_speed = 0;\n    this.rotation_speed = 0;\n    // temp\n    this.color = [0, 0, 0];\n\n    this.orbital_angle = 0;\n    this.angle = 0;\n  }\n}\n"]}